(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    198383,       4715]
NotebookOptionsPosition[    129567,       3459]
NotebookOutlinePosition[    168540,       4294]
CellTagsIndexPosition[    168207,       4282]
WindowTitle->Writing High-Performance Code
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
     "], {{0, 100}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{268.015625, Automatic},
   ImageSizeRaw->{450, 100},
   PlotRange->{{0, 450}, {0, 100}}], "Title"]], "Title",ExpressionUUID->\
"a893d9a9-8c7a-494a-9003-d97746207549"],

Cell["High-Performance Code", "Title",ExpressionUUID->"a8df9a6b-9e40-4b3a-8827-3246bad28988"],

Cell["In the Wolfram Language", "Subtitle",ExpressionUUID->"fb7c7004-a3e6-445c-890f-bab13ac91d09"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"d6812268-cb9b-43c6-81e5-41dfd7df1bc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"861554b2-f929-422f-ad8f-880ec365007a"],

Cell[CellGroupData[{

Cell["Introduction", "Section",ExpressionUUID->"4a6ca71e-1029-43f8-802f-05dccb8c18ec"],

Cell[TextData[{
 "This training session provides advice for writing Wolfram Language code \
that ",
 StyleBox["executes",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " in the least time. The advice should be balanced against the competing \
aims of writing code in the least time and writing code that is easy to read \
and maintain."
}], "Text",ExpressionUUID->"270cca72-1ad1-4657-9f8b-e2951e4f5cec"],

Cell[CellGroupData[{

Cell["Contents", "Subsubsection",ExpressionUUID->"65edbe7a-cc22-4e57-82bc-5edba2f1c51c"],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["General advice",
 BaseStyle->"Hyperlink",
 ButtonData->"GeneralAdvice"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"f0a9b762-39cd-4e97-9519-\
7e680fc06ad1"],

Cell["Built-in functions", "Subitem",ExpressionUUID->"3770d5d2-b2cc-4281-99e7-89c99fc39b6c"],

Cell["Floating-point numbers", "Subitem",ExpressionUUID->"4a055d88-6065-4ad1-abe8-f602306a12ba"],

Cell["Lists vs. associations", "Subitem",ExpressionUUID->"82a7c854-d9f3-4dfe-ad7d-5cda75b18adf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Special data structures",
 BaseStyle->"Hyperlink",
 ButtonData->"SpecialDataStructures"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"5425d8dc-335f-459e-9a5f-\
8b9832783655"],

Cell["Lists", "Subitem",ExpressionUUID->"92954dac-22d3-4c89-af81-a8160887ba11"],

Cell["DataStructure", "Subitem",ExpressionUUID->"40798cab-eb92-42db-9208-195f54d7a634"],

Cell["Anticipating usage", "Subitem",ExpressionUUID->"e21b75fb-0e6b-4905-920a-f411388c3a8a"]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Parallelization",
 BaseStyle->"Hyperlink",
 ButtonData->"Parallelization"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"3572ba4d-a9b2-47b6-b6f4-\
f97306e3f441"],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Code compilation",
 BaseStyle->"Hyperlink",
 ButtonData->"CodeCompilation"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"f7753bf6-dad3-4540-aaf8-\
7ddecc0787c6"],

Cell["FunctionCompile", "Subitem",ExpressionUUID->"6f9e7504-008c-4ecf-b7df-79be4cff35c0"],

Cell["Compilation types", "Subitem",ExpressionUUID->"08e3c345-342e-4050-82c1-f9f214530d1a"]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Caching and memoization",
 BaseStyle->"Hyperlink",
 ButtonData->"CachingAndMemoization"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"d4f6f206-71ef-477f-957a-\
8f0804c4daa0"],

Cell[TextData[StyleBox[ButtonBox["Additional tips",
 BaseStyle->"Hyperlink",
 ButtonData->"AdditionalTips"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"19b4398e-f94c-4bf5-acd4-\
26efa416fa2a"],

Cell[TextData[StyleBox[ButtonBox["Summary",
 BaseStyle->"Hyperlink",
 ButtonData->"Summary"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"d2b9d8cf-6451-4b47-9d67-\
2f2b8c802a94"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"9794d47f-26eb-4b19-9a74-a8b317d15a22"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ff1d4f03-5607-4935-ad45-73b6c0cb3d3d"],

Cell[CellGroupData[{

Cell["General Advice", "Section",
 CellTags->
  "GeneralAdvice",ExpressionUUID->"b60b309a-e8ce-4590-94cb-e35af0f614e4"],

Cell[CellGroupData[{

Cell["Built-in Functions", "Subsection",ExpressionUUID->"0773a62b-ed0a-4dd3-b70d-55e7c0fa0a15"],

Cell["\<\
Generally, it is not a good idea to try and implement functionality that \
already exists in the Wolfram Language unless you have a very specialized \
algorithm.\
\>", "Text",ExpressionUUID->"1f194888-7dd6-4937-827e-7ab69bb6f214"],

Cell["Built-in functions are highly optimized.", "Item",ExpressionUUID->"2cb8bd92-3a78-47d0-9e7d-b1f9a5adbc8b"],

Cell["\<\
Built-in functions often implement multiple algorithms and switch \
automatically to the most appropriate.\
\>", "Item",ExpressionUUID->"1a52ae97-d1fe-4171-a153-b2c22a975fd8"],

Cell["There is some overhead of passing data between functions.", "Item",ExpressionUUID->"86e36a96-7e6d-4782-8ad5-b43559fd6578"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Functional constructs vs. indexing",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"1aa816f8-5fc4-43ae-946e-cf82615ca933"],

Cell["\<\
In many languages, the standard way to handle vectors is to iterate through \
them with an index. This is rarely the fastest way in the Wolfram Language:\
\>", "Text",ExpressionUUID->"6887dabb-4e0e-46de-b01f-9095a8252cf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"10", "^", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",ExpressionUU\
ID->"be2202ec-e23e-43ff-83ec-47b80149f954"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", "0"}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{"temp", "+", 
        RowBox[{"data", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ";", "temp"}],
    ")"}], "//", "AbsoluteTiming"}]], "Input",ExpressionUUID->"b52d6323-c274-\
4ff2-ac45-f16ece39318c"],

Cell["\<\
If there is a built-in function for the same task, it will almost always be \
faster:\
\>", "Text",ExpressionUUID->"c5226ab2-a36e-48d4-8600-6b71d6abb305"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", "data", "]"}], "//", "AbsoluteTiming"}]], "Input",Expr\
essionUUID->"793031ad-942a-4ae5-a012-cb37b1eaed22"],

Cell["\<\
Even when there is no single function, handling the vector as a whole rather \
than indexing its elements is usually faster:\
\>", "Text",ExpressionUUID->"76f413fd-8f9c-4351-b770-832010e3243d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"a06d568a-f25d-416e-b6c9-\
349079e82ff4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"Sin", ",", "data"}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"cb10d864-3ca1-4b15-b31a-\
79530a5290f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "data", "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"2c5a8f3b-239c-4f82-86ac-\
496618272c89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Random generators",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"cb8e1a72-bb30-432e-b620-054a2af5d880"],

Cell[TextData[{
 "Generating data one element at a time requires many calls to ",
 ButtonBox["RandomReal",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/RandomReal.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/RandomReal.html"],
 ":"
}], "Text",ExpressionUUID->"83bea516-64a7-4e67-811e-5b7f1e1bacd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", "1", "]"}], ",", 
     RowBox[{"10", "^", "7"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"2c04466e-e55e-46c9-ae10-\
0abe3f644b98"],

Cell["\<\
Making a single call with the dimensions of the data required is faster:\
\>", "Text",ExpressionUUID->"f64c48b0-0e18-4f0f-a29b-7ea4a6aacb17"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"10", "^", "7"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"8f143192-5821-451b-b86f-\
086e1326feba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Level specifications",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"196c276f-e1d8-4b03-9804-b1ac59829954"],

Cell["\<\
Generally, level specifications in functions allow you to avoid more \
complicated elementwise application of functions. This example takes a list \
of 2\[Times]2 matrices and makes a list of length-4 vectors:\
\>", "Text",ExpressionUUID->"bad1dc55-d845-4efd-9b33-c9224aa17030"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", "5"}], ",", "2", ",", "2"}], "}"}]}], "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "2"}], "]"}], "]"}]}]}], "Input",ExpressionUUID->\
"980f9492-9fb4-4b3d-b5e8-d4434372d992"],

Cell[TextData[{
 "The simplest way is to use ",
 ButtonBox["Map",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Map.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Map.html"],
 " and apply ",
 ButtonBox["Flatten",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Flatten.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Flatten.html"],
 " across the list:"
}], "Text",ExpressionUUID->"737a13c5-6afb-4776-adbe-8866ab23f9dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"Flatten", ",", "data"}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"89e22ae1-c6f6-4970-a92c-\
eccd1f9a4119"],

Cell["\<\
However, a single call to Flatten can achieve the same result, using the \
specification that only levels 2 and 3 be flattened. This is faster:\
\>", "Text",ExpressionUUID->"6920b26a-8d89-4411-8992-3c6ed0094b9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"3a09a5cc-54b8-4064-b3f3-\
ecd02eb73cfb"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"1f075f09-fafd-4401-8b48-3be49376171e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"29d772c4-059b-454a-9ab7-8451076480a8"],

Cell[CellGroupData[{

Cell["Floating-Point Numbers", "Subsection",ExpressionUUID->"07980b8e-95fb-42bc-a5c5-c194a92b4aa4"],

Cell["\<\
The Wolfram Language handles numbers as accurately as possible:\
\>", "Text",ExpressionUUID->"27dc7cba-c606-49d9-a147-3c0109fc3713"],

Cell[BoxData[
 RowBox[{"1", "/", "3"}]], "Input",
 CellLabel->"",ExpressionUUID->"59d17d6a-6d85-4f1d-966d-e58129abe807"],

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"a96f33da-555f-46ce-adcf-7107fadb8733"],

Cell["\<\
If numbers contain a decimal point and have 16 or fewer specified digits, the \
Wolfram Language will represent them as machine-precision reals and compute \
accordingly:\
\>", "Text",ExpressionUUID->"da2cf505-0501-47ee-9dd1-c6167427d82b"],

Cell[BoxData[
 RowBox[{"1", "/", "3."}]], "Input",
 CellLabel->"",ExpressionUUID->"ffe48267-707f-4c9c-8d67-ea7240e709fe"],

Cell["\<\
If you want the most accurate results, you should use exact or high-precision \
numbers from the start.\
\>", "Item",ExpressionUUID->"fff2bb3f-5bc6-42b1-98a5-c5c9ea9f3395"],

Cell["\<\
If you want the fastest results, you should use machine numbers from the \
start.\
\>", "Item",ExpressionUUID->"d294a8e2-8f6d-4673-94bd-b0eff7440d5e"],

Cell[TextData[{
 "If you must use exact numbers, convert to reals using ",
 ButtonBox["N",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/N.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/N.html"],
 " as early as you can in the calculation."
}], "Item",ExpressionUUID->"c007f7e0-5c43-4141-bbc7-1d3f27707e52"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Matrix operations",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"4673193b-fea3-4486-93a1-00576498db1b"],

Cell["This matrix contains exact rational numbers:", "Text",ExpressionUUID->"18dd5d11-8e14-4769-9201-940ca8371f0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"matrix", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"i", "-", "j"}], "]"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "120"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"matrix", "//", "Short"}]}], "Input",ExpressionUUID->"d4e56c70-f29e-\
4adf-b765-94f1582654c2"],

Cell["\<\
Computing the determinant exactly and then numericalizing the result \
generates a very large intermediate rational result:\
\>", "Text",ExpressionUUID->"d665ff6b-df1e-4eb0-8c36-75d781c65c54"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Det", "[", "matrix", "]"}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"90697919-2897-44cd-b73d-\
007dad87993b"],

Cell["\<\
By numericalizing at the start, all operations can be performed at machine \
precision:\
\>", "Text",ExpressionUUID->"80829f2a-45de-4180-a921-107fd907ed5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", 
   RowBox[{"N", "[", "matrix", "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"b2b86a88-22a7-499e-b3c3-\
2264d5f09227"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Numeric functions",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"02454e06-b4bd-4452-84d7-0e4ef04e3121"],

Cell["\<\
Usually numerical computation is faster, though less accurate, than symbolic \
computation:\
\>", "Text",ExpressionUUID->"54b6577b-e204-4ee1-b1a8-15a4f0b05496"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "21"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"7d7ed0bd-d8f7-4270-bda8-\
92291fec9e60"],

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",ExpressionUUID->"eb7acb6e-243e-4bf9-9618-02ab43836fb8"],

Cell[TextData[{
 ButtonBox["NIntegrate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/NIntegrate.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/NIntegrate.html"],
 " gives a numerical approximation of the integral:"
}], "Text",ExpressionUUID->"2bb58758-4cd8-4362-a62c-ec0cc40e519f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "21"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"6dd3b470-649a-422e-af8a-\
7180a3236754"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"15feceab-9617-4752-90f3-a7dfc41bb53a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0c4673be-97e0-416b-8494-0e0c30d18e89"],

Cell[CellGroupData[{

Cell["Lists vs. Associations", "Subsection",ExpressionUUID->"edf4a67f-f9d7-4856-b9ed-a20e3051c72d"],

Cell[TextData[{
 "The two basic structures for data in the Wolfram Language are ",
 ButtonBox["List",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/List.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/List.html"],
 " (indexed by position) and ",
 ButtonBox["Association",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Association.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Association.html"],
 " (indexed by key or position). While one might choose between them based on \
problem conceptualization, they have different performance characteristics."
}], "Text",ExpressionUUID->"59de4cde-ac7b-4e66-927b-3d52a9981ec9"],

Cell["Lists require less data (since they have no keys).", "Item",ExpressionUUID->"a32ca18f-cfef-4b25-8c4a-e1660f6fae00"],

Cell["\<\
Lists are immutable structures that are copied when modified.\
\>", "Item",ExpressionUUID->"6dd732f0-f9e6-4529-bb13-e2dda416d8ac"],

Cell["Associations are based around hash tables.", "Item",ExpressionUUID->"0768a5be-34a8-4e63-b627-e4dbb8d1f2a2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Accumulating data",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"3d1c6c1a-8501-486c-be3c-61b8ccc3ecbc"],

Cell[TextData[{
 StyleBox[ButtonBox["AppendTo",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/AppendTo.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/AppendTo.html"],
  FontWeight->"Plain"],
 StyleBox[" ",
  FontWeight->"Plain"],
 "is O(n) for List (as a fresh copy is required) but O(1) for Association:"
}], "Text",ExpressionUUID->"35800cd7-c804-4c73-b9a0-5648b6097889"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"data", ",", 
        RowBox[{"RandomReal", "[", "]"}]}], "]"}], ",", " ", "50000"}], "]"}],
     ";", 
    RowBox[{"Take", "[", 
     RowBox[{"data", ",", "3"}], "]"}]}], ")"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"97523254-5647-46e5-8d41-\
a3b968e9cd6a"],

Cell[BoxData[
 RowBox[{"ByteCount", "[", "data", "]"}]], "Input",ExpressionUUID->"dec285a9-0794-4922-b9c4-dbb0d8f59554"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"index", "=", "0"}], ";", 
    RowBox[{"data", "=", 
     RowBox[{"<|", "|>"}]}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"index", "++"}], ")"}], "->", 
         RowBox[{"RandomReal", "[", "]"}]}]}], "]"}], ",", " ", "50000"}], 
     "]"}], ";", 
    RowBox[{"Take", "[", 
     RowBox[{"data", ",", "3"}], "]"}]}], ")"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"94ba9b9b-d176-41c9-b016-\
ab2eda3da4e3"],

Cell[BoxData[
 RowBox[{"ByteCount", "[", "data", "]"}]], "Input",ExpressionUUID->"48626c89-8bfb-4a8e-bda5-e6c3a855a419"],

Cell["However, this simple example would be best done directly:", "Text",ExpressionUUID->"fdd1bfb7-e338-4cab-942a-8bf5eee1c27e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", "50000", "}"}]}], "]"}]}], ";", 
    RowBox[{"Take", "[", 
     RowBox[{"data", ",", "3"}], "]"}]}], ")"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"894214d9-0c01-4300-aa15-\
61f656fdddaf"],

Cell[BoxData[
 RowBox[{"ByteCount", "[", "data", "]"}]], "Input",ExpressionUUID->"8c8ffcf2-8681-46d7-b8f6-46e3b39028ff"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"00fcc9d8-2f68-4521-abb4-7b3ab46ecd4a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9fdc0110-45b9-4fa4-83f0-32bb9576b9c0"],

Cell[CellGroupData[{

Cell["Special Data Structures", "Section",
 CellTags->
  "SpecialDataStructures",ExpressionUUID->"5a72fa5b-0580-4e17-8fe9-\
49279b64b97b"],

Cell[CellGroupData[{

Cell["Lists", "Subsection",ExpressionUUID->"a6f38ae6-2e1e-4df5-9904-df5d3fab6278"],

Cell["\<\
There are some special optimizations to make list processing faster.\
\>", "Text",ExpressionUUID->"3cf1a994-cf2b-42f4-86b7-c5815f6af236"],

Cell[CellGroupData[{

Cell["Packed arrays", "Subsubsection",ExpressionUUID->"61e62f26-4422-4e4d-ad64-0c2c72bcef43"],

Cell["\<\
Notice in the last example the list generated by RandomReal was smaller than \
the list generated by AppendTo. This is because of some hidden optimization \
for List. Where List can identify in advance that all values will be the same \
(e.g. all machine reals), it can used as an optimized representation:\
\>", "Text",ExpressionUUID->"5d5cbb5a-fd3b-472f-ba6b-62f18acbb4a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"10", "^", "6"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ByteCount", "[", "data", "]"}]}], "Input",ExpressionUUID->"e807dbf7-\
8e2d-4364-a084-3e180798628e"],

Cell["This special structure is invisible:", "Text",ExpressionUUID->"ae579458-8334-4bcc-9a38-bc181091ed3a"],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"data", ",", "3"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"5733b099-6022-49d9-81b7-577f92c76521"],

Cell["\<\
And conversion to a more general structure is automatic. For example, if you \
append any element that is not a machine real, then the whole object must be \
represented in a more general way:\
\>", "Text",ExpressionUUID->"0736d7f5-8a82-43d5-b6c0-d8e4ed520ea3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"data", ",", "1"}], 
    RowBox[{"(*", 
     RowBox[{"Not", " ", "a", " ", "machine", " ", "real"}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ByteCount", "[", "data2", "]"}]}], "Input",
 CellLabel->"",ExpressionUUID->"2246acb8-fa57-45bd-96fc-63ec8b304964"],

Cell["\<\
The object behaves in the same way, but more data must be processed to \
achieve the same results:\
\>", "Text",ExpressionUUID->"c1dba4e9-c699-4dfd-9375-ec81fa1631fc"],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"data2", ",", "3"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"87f46741-1b62-4bab-8c9f-573b33ac4908"],

Cell["You can check whether the optimized format is used:", "Text",ExpressionUUID->"e7b31302-3efa-41ec-96bd-e7ed4b90dece"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "data", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"6f0c0b89-9966-4df0-ac1d-ddbba1ad1481"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "data2", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"be71ee28-84e8-46d9-ab2b-c5d05ee94963"],

Cell["\<\
If your data is not packed, you can manually covert it, but the contents must \
be the same types:\
\>", "Text",ExpressionUUID->"97b4901f-79d4-41ff-bf60-8c4dd96e8f82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"Developer`ToPackedArray", "[", 
    RowBox[{"N", "@", "data2"}], "]"}]}], ";"}]], "Input",
 CellLabel->"",ExpressionUUID->"61d8a328-6c8b-4891-b3fe-c6474989ce83"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "data3", "]"}]], "Input",ExpressionUUI\
D->"b5f02bc3-1d7a-4d93-bb67-6d32c9133fec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SparseArray", "Subsubsection",ExpressionUUID->"b01cd058-3015-4213-9de8-c4a1b5334389"],

Cell[TextData[{
 "An even more optimized equivalent of List is ",
 ButtonBox["SparseArray",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/SparseArray.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/SparseArray.html"],
 ". If most elements of a list or array are identical (typically all zero), \
then it is only necessary to store the nonzero elements."
}], "Text",ExpressionUUID->"3e0f886e-07c7-48fe-8fa4-defcb3bdc3e1"],

Cell["\<\
For example, there are a billion elements in this list, but only the fifth \
element is nonzero:\
\>", "Text",ExpressionUUID->"071496de-23fb-4aa1-ab6d-b32b59f88f67"],

Cell[BoxData[
 RowBox[{"sparseData", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", "->", "17"}], "}"}], ",", 
    RowBox[{"10", "^", "9"}]}], "]"}]}]], "Input",
 CellLabel->"",ExpressionUUID->"47d4ea59-acad-4bed-b738-9dec6dfcee99"],

Cell[BoxData[
 RowBox[{"ByteCount", "[", "sparseData", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"d67c1e94-2efd-4067-b9c1-5b11d5c3c079"],

Cell["\<\
For supported operations, SparseArray is typically proportionately faster \
than the dense representation:\
\>", "Text",ExpressionUUID->"ac3507c3-0b74-46ba-8aab-4e3b842ed2f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", "sparseData", "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"ca7d1daa-73ab-4ee1-bce6-772fa24d014d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"Normal", "[", "sparseData", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Total", "[", "data", "]"}], "//", "AbsoluteTiming"}]}], "Input",Exp\
ressionUUID->"642c3bef-4b97-49f0-bfca-0fbc1de12f13"],

Cell["Unpacking can lead to memory errors:", "Text",ExpressionUUID->"003d40cd-b4b0-4712-ac47-8a5dc96830d1"],

Cell[BoxData[
 RowBox[{"largeSparseData", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "i_"}], "}"}], "->", "i"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"100000", ",", "100000"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"",ExpressionUUID->"59bec1e0-5492-4e33-96f4-14fde15738b3"],

Cell[BoxData[
 RowBox[{"Normal", "[", "largeSparseData", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"e98ed7e0-141c-469e-9934-a15c6c6e075b"],

Cell["\<\
For other operations, SparseArray is usually converted automatically to the \
dense representation.\
\>", "Text",ExpressionUUID->"af44f519-d369-4562-bb6b-a12ee70a0264"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"32b6077f-c256-47e1-b0b7-7c8767e95841"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1bcf60a2-ceec-47ca-ae2d-5bc3c4895e35"],

Cell[CellGroupData[{

Cell["DataStructure", "Subsection",ExpressionUUID->"34ddd732-aa16-415c-8a33-5782833ea2cb"],

Cell[TextData[{
 "Data science provides many data structures that are optimized for certain \
operations with certain prior assumptions about the usage pattern and \
contents. The Wolfram Language supports many of these through ",
 ButtonBox["CreateDataStructure",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/CreateDataStructure.html"],
     None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/CreateDataStructure.html"],
 "."
}], "Text",ExpressionUUID->"36471316-1765-4969-9ee5-6f9983f29577"],

Cell[TextData[{
 ButtonBox["DataStructure",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/DataStructure.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/DataStructure.html"],
 " typically supports only a small set of operations for each type."
}], "Item",ExpressionUUID->"a7af1988-5868-4370-a2d5-fe16b2118484"],

Cell["\<\
These operations are typically faster than the equivalent using List or \
Association data.\
\>", "Item",ExpressionUUID->"9f36fa6c-195e-4e2c-ac39-f0a9e8589b6f"],

Cell[TextData[{
 "The currently supported set of available special data structures is given \
by ",
 ButtonBox["$DataStructures",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/$DataStructures.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/$DataStructures.html"],
 ":"
}], "Text",ExpressionUUID->"d81b962f-84c0-4cc2-b31f-3c6d9597dd44"],

Cell[BoxData["$DataStructures"], "Input",
 CellLabel->"",ExpressionUUID->"191f8271-9ab3-4ff8-82ed-4b79eb618025"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Queues",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"b0f16a3a-76ff-4aa6-9170-59f870e831a6"],

Cell["\<\
All structures have the same interface. You start by creating the data \
structure:\
\>", "Text",ExpressionUUID->"6032ec01-4bd9-4b7d-b9f9-739e92c5a99d"],

Cell[BoxData[
 RowBox[{"queue", "=", 
  RowBox[{"CreateDataStructure", "[", "\"\<Queue\>\"", "]"}]}]], "Input",
 CellLabel->"",ExpressionUUID->"3501f478-b5ef-494e-ace0-8405a1a8f48f"],

Cell[TextData[{
 "In the case of ",
 Cell[BoxData["\<\"Queue\"\>"], "Input",ExpressionUUID->
  "ce16c890-9adb-4736-b0cf-4d001489bdff"],
 ", there are nine supported operations: Copy, DropAll, Elements, EmptyQ, \
Length, Peek, Pop, Push and Visualization. Performance complexity is \
documented for each data structure. In the case of ",
 Cell[BoxData["\<\"Queue\"\>"], "Input",ExpressionUUID->
  "2bd1aae6-ca29-4f52-b29a-5772dc1c4380"],
 " these are:"
}], "Text",ExpressionUUID->"dd4ab649-c6e3-4a10-be15-e5b170b71c30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellPrint", "[", "\[IndentingNewLine]", 
  RowBox[{"ExpressionCell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Grid", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Operation\>\"", ",", " ", "\"\<Action\>\"", ",", " ", 
          "\"\<Time\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"Copy\\\"]\>\
\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Return a copy of \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(\!\(\*StyleBox[\"n\", \"TI\"]\))\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"DropAll\\\"\
]\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Drop all the elements from \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(\!\(\*StyleBox[\"n\", \"TI\"]\))\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"Elements\\\
\"]\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Return a list of the elements of \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(\!\(\*StyleBox[\"n\", \"TI\"]\))\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"EmptyQ\\\"]\
\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<True, if \!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\) is \
empty\>\"", ",", " ", "\"\<O(1)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"Length\\\"]\
\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Number of elements in \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(1)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"Peek\\\"]\>\
\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<First element in \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(1)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"Pop\\\"]\>\
\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Remove the first element of \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(1)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"Push\\\", \
\!\(\*StyleBox[\"x\", \"TI\"]\)]\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}], 
          ",", " ", 
          "\"\<Add \!\(\*StyleBox[\"x\", \"TI\"]\) to the end of \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(1)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)[\\\"\
Visualization\\\"]\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Return a visualization of \
\!\(\*StyleBox[\"ds\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
          "\"\<O(\!\(\*StyleBox[\"n\", \"TI\"]\))\>\""}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", " ", "->", " ", "\"\<Text\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Alignment", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Left", ",", " ", "Left", ",", " ", "Center"}], "}"}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Background", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"GrayLevel", "[", "0.95", "]"}], ",", "White"}], "}"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"GrayLevel", "[", "0.85", "]"}]}], "}"}]}], "}"}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Spacings", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "1.5"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", " ", "->", " ", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", " ", "->", " ", "Gray"}]}], "\[IndentingNewLine]",
      "]"}], ",", "\[IndentingNewLine]", "\"\<Output\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GeneratedCell", " ", "->", " ", "False"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[719]:=",ExpressionUUID->"cc6e4b15-859b-45ae-8d0b-e6cd6129ff4a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Operation\"\>", "\<\"Action\"\>", "\<\"Time\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Copy\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Return a copy of \\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\
\\\"Italic\\\"]\\)\"\>", "\<\"O(\\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\))\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"DropAll\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Drop all the elements from \
\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)\"\>", \
"\<\"O(\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\))\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Elements\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Return a list of the elements of \\!\\(\\*StyleBox[\\\"ds\
\\\",FontSlant->\\\"Italic\\\"]\\)\"\>", "\<\"O(\\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\))\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"EmptyQ\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"True, if \
\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\) is empty\"\>", "\<\
\"O(1)\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Length\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Number of elements in \
\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)\"\>", \
"\<\"O(1)\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Peek\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"First element in \\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\
\\\"Italic\\\"]\\)\"\>", "\<\"O(1)\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Pop\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Remove the first element of \
\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)\"\>", \
"\<\"O(1)\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Push\\\", \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\)]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Add \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to the \
end of \\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)\"\>", \
"\<\"O(1)\"\>"},
    {
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)[\
\\\"Visualization\\\"]\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Return a visualization of \
\\!\\(\\*StyleBox[\\\"ds\\\",FontSlant->\\\"Italic\\\"]\\)\"\>", \
"\<\"O(\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\))\"\>"}
   },
   AutoDelete->False,
   BaseStyle->"Text",
   FrameStyle->GrayLevel[0.5],
   GridBoxAlignment->{"Columns" -> {Left, Left, Center}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        GrayLevel[0.95], 
        GrayLevel[1]}}, "RowsIndexed" -> {1 -> GrayLevel[0.85]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 GeneratedCell->False,ExpressionUUID->"05a02171-5927-4c40-a1d5-ee9f105d1e0e"]
}, {2}]],

Cell[TextData[{
 "You can use ",
 Cell[BoxData["\<\"Push\"\>"], "Input",ExpressionUUID->
  "9061f079-838d-40aa-9697-9ac6d8dd5d36"],
 " to append an item to the back of the ",
 Cell[BoxData["\<\"Queue\"\>"], "Input",ExpressionUUID->
  "2ec701bd-03b6-44dd-b90a-3802a3debc64"],
 " data structure:"
}], "Text",ExpressionUUID->"a140c63a-427e-4853-92e2-a6aaf6278c71"],

Cell[BoxData[
 RowBox[{"queue", "[", 
  RowBox[{"\"\<Push\>\"", ",", "1"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"6a2f102a-fd00-487c-b976-8dd1af112950"],

Cell[BoxData[
 RowBox[{"queue", "[", 
  RowBox[{"\"\<Push\>\"", ",", "2"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"e9d2a56b-836e-4794-899d-59843c66fc09"],

Cell[TextData[{
 "And use ",
 Cell[BoxData["\<\"Pop\"\>"], "Input",ExpressionUUID->
  "55c58efc-0f65-426a-88d9-941291814744"],
 " to retrieve and remove an item from the front of the ",
 Cell[BoxData["\<\"Queue\"\>"], "Input",ExpressionUUID->
  "86792e3a-4e14-4670-8d4f-f8fe2c38f7fd"],
 " data structure:"
}], "Text",ExpressionUUID->"ae45f4e7-53e0-4167-84ce-6b70536624bb"],

Cell[BoxData[
 RowBox[{"queue", "[", "\"\<Pop\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"cf74db5b-259e-4075-a786-bfbe4dff6c31"],

Cell[BoxData[
 RowBox[{"queue", "[", "\"\<Pop\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"b88f9817-e381-4e40-8e3f-d445d5ca8828"],

Cell["\<\
You can compare the performance against a simple implementation based on List:\
\>", "Text",ExpressionUUID->"1ea8eb5a-e704-4602-ba74-5036a6dc8a3a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"push", ",", " ", "pop"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"push", "[", "value_", "]"}], ":=", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"queue", ",", "value"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"val", "=", 
       RowBox[{"First", "[", "queue", "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"queue", "=", 
       RowBox[{"Rest", "[", "queue", "]"}]}], ";", "val"}]}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"dfebabe2-dd60-46e0-ac86-c718f85f1c3c"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"queue", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "===", "0"}], ",", 
       RowBox[{"pop", "[", "]"}], ",", 
       RowBox[{"push", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "50000"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"pop", "[", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",Express\
ionUUID->"a2c5e4f6-92c0-48dc-81a2-140de64a1476"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"queue", "=", 
    RowBox[{"CreateDataStructure", "[", "\"\<Queue\>\"", "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "===", "0"}], ",", 
       RowBox[{"queue", "[", "\"\<Pop\>\"", "]"}], ",", 
       RowBox[{"queue", "[", 
        RowBox[{"\"\<Push\>\"", ",", "i"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "50000"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"queue", "[", "\"\<Pop\>\"", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"0dc97d08-c822-4c27-8b93-66c833432bb0"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"bfa7ec53-c6b6-40ae-9aff-9042c925320e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"33a2f77f-9b8e-4d77-b714-8e671bb81104"],

Cell[CellGroupData[{

Cell["Anticipating Usage", "Subsection",ExpressionUUID->"d2844010-4e7d-493b-b06f-e4597b1b7f1b"],

Cell["\<\
Different data structures may be optimal for the same operations, depending \
on the anticipated patterns of data that they hold and different patterns of \
usage. Some data structures support particular operations not supported by \
others.\
\>", "Text",ExpressionUUID->"69d67a4c-7457-4bc8-beac-8ede9bd2651c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Word completion",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"0c538eaf-8892-4bd1-8f32-6d4ac20a127e"],

Cell[TextData[{
 Cell[BoxData[
 "\"\<ByteTrie\>\""], "Input",ExpressionUUID->
  "14520719-6c97-4bf4-9964-c988fbe1e213"],
 " forms a tree structure where common sequences are shared:"
}], "Text",ExpressionUUID->"8fb7ac9b-1604-4cee-9f26-0e2ee9d2730c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"CreateDataStructure", "[", 
    RowBox[{
    "\"\<ByteTrie\>\"", ",", " ", "\"\<a\>\"", ",", " ", "\"\<c\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"\"\<Insert\>\"", ",", " ", "\"\<ab\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"\"\<Insert\>\"", ",", " ", "\"\<abb\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"\"\<Insert\>\"", ",", " ", "\"\<acb\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"\"\<Insert\>\"", ",", " ", "\"\<bbc\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ds", "[", "\"\<Visualization\>\"", "]"}]}], "Input",ExpressionUUID->\
"fdb7d960-5697-4cd4-b07c-4690ac00b09f"],

Cell[TextData[{
 "This makes it suitable where there is a high degree of commonality in the \
elements, and it is very fast to search for items that ",
 StyleBox["start",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " with a specific sequence. For example, the following code implements a \
word completion algorithm:"
}], "Text",ExpressionUUID->"edb66e13-25e2-4e59-af0c-86a9d0e90cdb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsByteTrie", " ", "=", " ", 
   RowBox[{"CreateDataStructure", "[", 
    RowBox[{
    "\"\<ByteTrie\>\"", ",", " ", "\"\<a\>\"", ",", " ", "\"\<z\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Scan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"dsByteTrie", "[", 
      RowBox[{"\"\<Insert\>\"", ",", "#"}], "]"}], ")"}], "&"}], ",", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<'\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<-\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], 
     ",", 
     RowBox[{"ToLowerCase", "[", 
      RowBox[{"RemoveDiacritics", "[", 
       RowBox[{"DictionaryLookup", "[", "]"}], "]"}], "]"}]}], "]"}]}], 
  "]"}]}], "Input",ExpressionUUID->"d1bd17c9-ba51-4a30-af28-18bf87cd26a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dsByteTrie", "[", 
   RowBox[{"\"\<Strings\>\"", ",", " ", "\"\<smoo\>\""}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"d247ee3f-ccfe-4d5d-affb-01697b9734c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DictionaryLookup", "[", "\"\<smoo*\>\"", "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"3dbf6a44-a56a-4b73-bea6-066460ece430"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" CouldContain",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"68ad152a-3b77-4f00-a6dd-959addf58635"],

Cell[TextData[{
 Cell[BoxData[
 "\"\<BloomFilter\>\""], "Input",ExpressionUUID->
  "6b563606-824e-4866-ba62-db5d208f9d97"],
 " supports the specialist operation ",
 Cell[BoxData[
 "\"\<CouldContain\>\""], "Input",ExpressionUUID->
  "2b3e95a2-6804-4015-9384-d8943a4db708"],
 ". It can guarantee that an item is not in a set with O(1) time complexity \
(independent of data length), but cannot be certain that it does contain the \
item:"
}], "Text",ExpressionUUID->"c69f78de-cab7-48ad-8998-cb61c1f700d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsBloom", " ", "=", " ", 
   RowBox[{"CreateDataStructure", "[", 
    RowBox[{"\"\<BloomFilter\>\"", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"DictionaryLookup", "[", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Scan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"dsBloom", "[", 
      RowBox[{"\"\<Insert\>\"", ",", "#"}], "]"}], ")"}], "&"}], ",", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<'\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<-\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], 
     ",", 
     RowBox[{"ToLowerCase", "[", 
      RowBox[{"RemoveDiacritics", "[", 
       RowBox[{"DictionaryLookup", "[", "]"}], "]"}], "]"}]}], "]"}]}], 
  "]"}]}], "Input",ExpressionUUID->"e61f703f-ceb9-4c40-9f95-115b7aa8f838"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dsBloom", "[", 
   RowBox[{"\"\<CouldContain\>\"", ",", "\"\<smoo\>\""}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"760e2e0e-0a1b-4705-aa14-cbb1c64525f3"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"ff04e7bd-d05d-46df-a21e-1a7e1dc4c921"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"84c05ece-78de-4236-a274-1310565f2f39"],

Cell[CellGroupData[{

Cell["Parallelization", "Section",
 CellTags->
  "Parallelization",ExpressionUUID->"d80f9791-d265-4c4a-b7ae-5bfc48b68de3"],

Cell["\<\
When a computation requires many independent calculations, you can divide the \
problem into parts and execute each part on a different Wolfram Engine at the \
same time.\
\>", "Text",ExpressionUUID->"f9aa23b6-9bd6-43e5-a8bc-8fe16f1575b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellPrint", "[", "\[IndentingNewLine]", 
  RowBox[{"ExpressionCell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"st1", "=", "Red"}], ",", "\[IndentingNewLine]", 
        RowBox[{"st2", "=", "Orange"}], ",", "\[IndentingNewLine]", 
        RowBox[{"st3", "=", "Blue"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graph", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Results\>\""}], 
            ",", "st1"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 1\>\""}], 
            ",", "st2"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 2\>\""}], 
            ",", "st2"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 3\>\""}], 
            ",", "st2"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 4\>\""}], 
            ",", "st2"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Worker 1\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], 
            ",", "st3"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Worker 2\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], 
            ",", "st3"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Worker 3\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], 
            ",", "st3"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Worker 4\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], 
            ",", "st3"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "->", "\"\<IndexLabeled\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{"\"\<Name\>\"", ",", " ", "Center"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Task Manager\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], ",", 
           RowBox[{"\"\<Results\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"2.5", ",", "1"}], "}"}]}], ",", 
           RowBox[{"\"\<Worker 1\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.8"}], "}"}]}], ",", 
           RowBox[{"\"\<Worker 2\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1.6", ",", "1.8"}], "}"}]}], ",", 
           RowBox[{"\"\<Worker 3\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0.2"}], "}"}]}], ",", 
           RowBox[{"\"\<Worker 4\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1.6", ",", "0.2"}], "}"}]}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexSize", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
        RowBox[{"EdgeLabels", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Results\>\""}], 
            "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Collected answers\>\"", ",", " ", "0.4"}], "]"}]}], 
           ",", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 1\>\""}], 
            "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Instructions\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 2\>\""}], 
            "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Instructions\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 3\>\""}], 
            "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Instructions\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Task Manager\>\"", "\[DirectedEdge]", "\"\<Worker 4\>\""}], 
            "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Instructions\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Worker 1\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Answers\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Worker 2\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Answers\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Worker 3\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Answers\>\"", ",", " ", "0.6"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "\"\<Worker 4\>\"", "\[DirectedEdge]", "\"\<Task Manager\>\""}], "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Answers\>\"", ",", " ", "0.6"}], "]"}]}]}], "}"}]}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "->", "500"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Output\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"GeneratedCell", " ", "->", " ", "False"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",Expres\
sionUUID->"d2a7a3f8-1493-4ce8-af1a-bcca2426b015"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Task Manager", "Results", "Worker 1", "Worker 2", "Worker 3", 
       "Worker 4"}, {{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {3, 1}, {4, 
       1}, {5, 1}, {6, 1}}, Null}, {
      EdgeLabels -> {
        DirectedEdge["Worker 1", "Task Manager"] -> Placed["Answers", 0.6], 
         DirectedEdge["Task Manager", "Worker 2"] -> 
         Placed["Instructions", 0.6], 
         DirectedEdge["Worker 4", "Task Manager"] -> Placed["Answers", 0.6], 
         DirectedEdge["Worker 2", "Task Manager"] -> Placed["Answers", 0.6], 
         DirectedEdge["Task Manager", "Worker 4"] -> 
         Placed["Instructions", 0.6], 
         DirectedEdge["Task Manager", "Worker 1"] -> 
         Placed["Instructions", 0.6], 
         DirectedEdge["Task Manager", "Worker 3"] -> 
         Placed["Instructions", 0.6], 
         DirectedEdge["Worker 3", "Task Manager"] -> Placed["Answers", 0.6], 
         DirectedEdge["Task Manager", "Results"] -> 
         Placed["Collected answers", 0.4]}, 
       EdgeStyle -> {DirectedEdge["Worker 1", "Task Manager"] -> {
           RGBColor[0, 0, 1]}, DirectedEdge["Task Manager", "Worker 4"] -> {
           RGBColor[1, 0.5, 0]}, DirectedEdge["Worker 2", "Task Manager"] -> {
           RGBColor[0, 0, 1]}, DirectedEdge["Task Manager", "Worker 2"] -> {
           RGBColor[1, 0.5, 0]}, DirectedEdge["Task Manager", "Results"] -> {
           RGBColor[1, 0, 0]}, DirectedEdge["Task Manager", "Worker 1"] -> {
           RGBColor[1, 0.5, 0]}, DirectedEdge["Worker 4", "Task Manager"] -> {
           RGBColor[0, 0, 1]}, DirectedEdge["Task Manager", "Worker 3"] -> {
           RGBColor[1, 0.5, 0]}, DirectedEdge["Worker 3", "Task Manager"] -> {
           RGBColor[0, 0, 1]}}, ImageSize -> 500, PerformanceGoal -> 
       "Quality", PlotTheme -> "IndexLabeled", 
       VertexCoordinates -> {{1, 1}, {2.5, 1}, {0.4, 1.8}, {1.6, 1.8}, {0.4, 
         0.2}, {1.6, 0.2}}, VertexLabels -> {
         Placed["Name", Center]}, VertexSize -> {0.5}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Opacity[1], Arrowheads[Medium], {
         TagBox[
          {RGBColor[1, 0, 0], 
           ArrowBox[{
            DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
             "VertexID$2", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$1"], 
         InsetBox["\<\"Collected answers\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$1", Automatic, Scaled[0.4]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[1, 0.5, 0], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$1", Automatic, Center], {
             0.5684474022535035, 1.3013355516901361`}, DynamicLocation[
             "VertexID$3", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$2"], 
         InsetBox["\<\"Instructions\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$2", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[1, 0.5, 0], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$1", Automatic, Center], {
             1.168447402253508, 1.4986644483098635`}, DynamicLocation[
             "VertexID$4", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$3"], 
         InsetBox["\<\"Instructions\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$3", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[1, 0.5, 0], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$1", Automatic, Center], {
             0.8315525977464941, 0.5013355516901313}, DynamicLocation[
             "VertexID$5", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$4"], 
         InsetBox["\<\"Instructions\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$4", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[1, 0.5, 0], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$1", Automatic, Center], {
             1.431552597746498, 0.6986644483098645}, DynamicLocation[
             "VertexID$6", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$5"], 
         InsetBox["\<\"Instructions\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$5", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[0, 0, 1], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$3", Automatic, Center], {
             0.831552597746494, 1.4986644483098692`}, DynamicLocation[
             "VertexID$1", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$6"], 
         InsetBox["\<\"Answers\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$6", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[0, 0, 1], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$4", Automatic, Center], {
             1.431552597746482, 1.3013355516901186`}, DynamicLocation[
             "VertexID$1", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$7"], 
         InsetBox["\<\"Answers\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$7", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[0, 0, 1], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$5", Automatic, Center], {
             0.5684474022535079, 0.6986644483098664}, DynamicLocation[
             "VertexID$1", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$8"], 
         InsetBox["\<\"Answers\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$8", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {RGBColor[0, 0, 1], 
           ArrowBox[BezierCurveBox[{
            DynamicLocation["VertexID$6", Automatic, Center], {
             1.1684474022535052`, 0.5013355516901316}, DynamicLocation[
             "VertexID$1", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$9"], 
         InsetBox["\<\"Answers\"\>", 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$9", Automatic, Scaled[0.6]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[GrayLevel[0]], 
        TagBox[{
          TagBox[DiskBox[{1., 1.}, 0.25],
           "DynamicName",
           BoxID -> "VertexID$1"], InsetBox[
           StyleBox["\<\"Task Manager\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], DynamicLocation[
           "VertexID$1", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$1"], 
        TagBox[{
          TagBox[DiskBox[{2.5, 1.}, 0.25],
           "DynamicName",
           BoxID -> "VertexID$2"], InsetBox[
           StyleBox["\<\"Results\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], DynamicLocation[
           "VertexID$2", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$2"], 
        TagBox[{
          TagBox[DiskBox[{0.4, 1.8}, 0.25],
           "DynamicName",
           BoxID -> "VertexID$3"], InsetBox[
           StyleBox["\<\"Worker 1\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], DynamicLocation[
           "VertexID$3", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$3"], 
        TagBox[{
          TagBox[DiskBox[{1.6, 1.8}, 0.25],
           "DynamicName",
           BoxID -> "VertexID$4"], InsetBox[
           StyleBox["\<\"Worker 2\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], DynamicLocation[
           "VertexID$4", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$4"], 
        TagBox[{
          TagBox[DiskBox[{0.4, 0.2}, 0.25],
           "DynamicName",
           BoxID -> "VertexID$5"], InsetBox[
           StyleBox["\<\"Worker 3\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], DynamicLocation[
           "VertexID$5", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$5"], 
        TagBox[{
          TagBox[DiskBox[{1.6, 0.2}, 0.25],
           "DynamicName",
           BoxID -> "VertexID$6"], InsetBox[
           StyleBox["\<\"Worker 4\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], DynamicLocation[
           "VertexID$6", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$6"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->500]], "Output",
 GeneratedCell->False,ExpressionUUID->"8a4eb422-8533-4b4a-b396-2d66aaf06bbf"]
}, {2}]],

Cell["A collection of tools is provided to make this easy:", "Text",ExpressionUUID->"d68b4d12-467b-43f0-a8ae-6caebb348c7b"],

Cell[BoxData[
 RowBox[{"?", "Parallel*"}]], "Input",
 CellLabel->"",ExpressionUUID->"0f3c50b3-8c47-4880-a813-b6403f4d472f"],

Cell["Use parallelization when:", "Text",ExpressionUUID->"57597c46-92b2-4da2-b3d4-2c41242baa15"],

Cell["\<\
The problem can be broken into mostly independent calculations.\
\>", "Item",ExpressionUUID->"f187eb19-defb-4e1c-bde0-d6fd5d7e6831"],

Cell["\<\
The execution time is long compared to the time to transmit the question and \
answer between the control and compute kernels.\
\>", "Item",ExpressionUUID->"a0198d8e-454f-4543-b273-4f5ed80b1fd8"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" ParallelTable",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"5273145e-05df-4015-98e7-048ab5b8c92a"],

Cell[TextData[{
 ButtonBox["Table",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Table.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Table.html"],
 " executes each element in series:"
}], "Text",ExpressionUUID->"5842632c-3341-46e3-8a41-c3d0792ef1df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{
      RowBox[{"2", "^", "n"}], "-", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "15000", ",", "15050"}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"4fed32b3-17e3-45c7-948f-25d7801410e4"],

Cell[TextData[{
 ButtonBox["ParallelTable",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/ParallelTable.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/ParallelTable.html"],
 " will give the same result (if there are no side effects to the individual \
computations) but executes blocks of computation in parallel:"
}], "Text",ExpressionUUID->"e5568e64-6f58-4c91-9705-8096ed398a1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellPrint", "[", "\[IndentingNewLine]", 
  RowBox[{"ExpressionCell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diagram", "[", 
     RowBox[{"\"\<ParallelEvaluate[f[x]]\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<f[x]\>\"", ",", "\"\<f[x]\>\"", ",", "\"\<f[x]\>\"", ",", 
        "\"\<f[x]\>\""}], "}"}], ",", "\"\<{f[x],f[x],f[x],f[x]}\>\""}], 
     "]"}], ",", "\[IndentingNewLine]", "\"\<Output\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GeneratedCell", " ", "->", " ", "False"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",Expres\
sionUUID->"46d5ee98-87b0-4b38-b9e3-5746e108a55b"],

Cell[BoxData[
 GraphicsBox[{{
    {Arrowheads[{0, -0.03, 0.03, 0}], ArrowBox[{{0, 1}, {-1.625, 0}}], 
     InsetBox[
      FrameBox[
       StyleBox["\<\"f[x]\"\>",
        StripOnInput->False,
        FontFamily->"Courier",
        FontSize->Scaled[0.025]],
       Background->RGBColor[1, 1, 0.85],
       RoundingRadius->5,
       StripOnInput->False], {-1.625, 0}]}, 
    {Arrowheads[{0, -0.03, 0.03, 0}], ArrowBox[{{0, 1}, {-0.25, 0}}], InsetBox[
      FrameBox[
       StyleBox["\<\"f[x]\"\>",
        StripOnInput->False,
        FontFamily->"Courier",
        FontSize->Scaled[0.025]],
       Background->RGBColor[1, 1, 0.85],
       RoundingRadius->5,
       StripOnInput->False], {-0.25, 0}]}, 
    {Arrowheads[{0, -0.03, 0.03, 0}], ArrowBox[{{0, 1}, {1.125, 0}}], InsetBox[
      FrameBox[
       StyleBox["\<\"f[x]\"\>",
        StripOnInput->False,
        FontFamily->"Courier",
        FontSize->Scaled[0.025]],
       Background->RGBColor[1, 1, 0.85],
       RoundingRadius->5,
       StripOnInput->False], {1.125, 0}]}, 
    {Arrowheads[{0, -0.03, 0.03, 0}], ArrowBox[{{0, 1}, {2.5, 0}}], InsetBox[
      FrameBox[
       StyleBox["\<\"f[x]\"\>",
        StripOnInput->False,
        FontFamily->"Courier",
        FontSize->Scaled[0.025]],
       Background->RGBColor[1, 1, 0.85],
       RoundingRadius->5,
       StripOnInput->False], {2.5, 0}]}}, 
   {Arrowheads[{{0.03, 0.6}}], ArrowBox[{{0, 1}, {6, 1}}], InsetBox[
     FrameBox[
      StyleBox["\<\"ParallelEvaluate[f[x]]\"\>",
       StripOnInput->False,
       FontFamily->"Courier",
       FontSize->Scaled[0.025]],
      Background->RGBColor[1, 1, 0.85],
      RoundingRadius->5,
      StripOnInput->False], {0, 1}], InsetBox[
     FrameBox[
      StyleBox["\<\"{f[x],f[x],f[x],f[x]}\"\>",
       StripOnInput->False,
       FontFamily->"Courier",
       FontSize->Scaled[0.025]],
      Background->RGBColor[1, 1, 0.85],
      RoundingRadius->5,
      StripOnInput->False], {6, 1}]}},
  AspectRatio->0.6,
  ImageSize->{697.934375, Automatic},
  PlotRange->{{-4, 9}, {-0.2, 1.2}}]], "Output",
 GeneratedCell->False,ExpressionUUID->"825c1c2d-8cfc-4880-a230-dc49238c4e78"]
}, {2}]],

Cell[BoxData[
 RowBox[{"LaunchKernels", "[", "]"}]], "Input",ExpressionUUID->"547ef710-9680-4f76-80b0-9858324d2a0e"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"FactorInteger", "[", 
      RowBox[{
       RowBox[{"10", "^", "50"}], "+", "i"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "20"}], "}"}]}], "]"}], "]"}]], "Input",Expression\
UUID->"e21447b9-0899-4cff-865a-4e9f6fba2cb1"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"FactorInteger", "[", 
      RowBox[{
       RowBox[{"10", "^", "50"}], "+", "i"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "20"}], "}"}]}], "]"}], "]"}]], "Input",Expression\
UUID->"f1825c96-ef52-47cb-aeed-646d2f1b639c"],

Cell["\<\
You can see where it performs the individual computations by labeling them:\
\>", "Text",ExpressionUUID->"efb6d3a9-ad48-44cd-a567-1e701d5ccfaa"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Length", "@", 
       RowBox[{"FactorInteger", "[", 
        RowBox[{
         RowBox[{"10", "^", "50"}], "+", "i"}], "]"}]}], ",", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"$KernelID", ",", " ", "Gray"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "20"}], "}"}]}], "]"}], "]"}]], "Input",Expression\
UUID->"c6d92df4-78b5-4266-9c5d-848a8b9d7956"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Length", "@", 
       RowBox[{"FactorInteger", "[", 
        RowBox[{
         RowBox[{"10", "^", "50"}], "+", "i"}], "]"}]}], ",", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"$KernelID", ",", " ", "Gray"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "20"}], "}"}]}], "]"}], "]"}]], "Input",Expression\
UUID->"5d65c4d0-3832-42a7-8035-882de8a06f03"],

Cell[BoxData[
 RowBox[{"CloseKernels", "[", "]"}]], "Input",ExpressionUUID->"6156daea-47ce-4615-b45c-8133c9bf981a"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"5487cf1c-2245-4b9b-88bb-8d509d3ffda7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"22780e35-74a5-40e0-80d4-d47ba2c390e9"],

Cell[CellGroupData[{

Cell["Code Compilation", "Section",
 CellTags->
  "CodeCompilation",ExpressionUUID->"662751af-dde1-48d2-8e68-2ae21350ad20"],

Cell[CellGroupData[{

Cell["FunctionCompile", "Subsection",ExpressionUUID->"b418fe88-96ef-415c-a95a-82ffa0c1ccd4"],

Cell["\<\
Wolfram Language functions are designed to be very general, typically \
automatically handling real, complex, exact, symbolic and high-precision \
input automatically. While this is convenient, it comes at a cost to \
performance.\
\>", "Text",ExpressionUUID->"e26ba0c4-ae01-4466-9613-75de4705d782"],

Cell["\<\
The Wolfram Language compiler allows you to limit the expectation of inputs \
to certain types, allowing the compiler to automatically optimize your code.\
\>", "Text",ExpressionUUID->"ae0c577e-d8a5-4587-b4b9-5220ffbe5321"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Nested sine",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"7cf4cb2a-447e-4edd-8a28-dbafac32bcbc"],

Cell["\<\
While a real argument, 10.1, is provided to this function, the function does \
not know that in advance:\
\>", "Text",ExpressionUUID->"cc53a9f3-e5dd-4e0f-8698-14591414298f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nestedSine", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"arg", ",", "n"}], "}"}], ",", 
     RowBox[{"Nest", "[", 
      RowBox[{"Sin", ",", "arg", ",", " ", "n"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"7ebe4d43-841f-4ad1-aa1a-a13913f444b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nestedSine", "[", 
   RowBox[{"10.1", ",", "5000000"}], "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellID->797256668,ExpressionUUID->"7bf6a620-07f4-4d16-87f5-8f9e267e44da"],

Cell["Indeed, it could have been complex:", "Text",ExpressionUUID->"fadaf586-5843-43bb-8449-dab2257f5d17"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nestedSine", "[", 
   RowBox[{
    RowBox[{"10.1", "+", " ", "I"}], ",", "5000000"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"170a90d5-5364-4592-b35f-\
e03394695e13"],

Cell[TextData[{
 "However, if you know the expected types, you can annotate the arguments \
with ",
 ButtonBox["Typed",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Typed.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Typed.html"],
 " to convey the expectation. You can then use ",
 ButtonBox["FunctionCompile",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/FunctionCompile.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/FunctionCompile.html"],
 " to optimize the code:"
}], "Text",ExpressionUUID->"abb2c960-ef4e-4d1b-a0d2-ea8584f541cf"],

Cell[BoxData[
 RowBox[{"compiledNestedSine", "=", 
  RowBox[{"FunctionCompile", "[", "\[IndentingNewLine]", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Typed", "[", 
        RowBox[{"arg", ",", "\"\<MachineReal\>\""}], "]"}], ",", 
       RowBox[{"Typed", "[", 
        RowBox[{"n", ",", "\"\<Integer64\>\""}], "]"}]}], "}"}], ",", 
     RowBox[{"Nest", "[", 
      RowBox[{"Sin", ",", "arg", ",", " ", "n"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellID->1785607515,ExpressionUUID->"cacdc29d-38a7-481b-8f9b-d3c6a4e14f50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compiledNestedSine", "[", 
   RowBox[{"10.1", ",", " ", "5000000"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellID->1995742502,ExpressionUUID->"1122c629-303f-4c7c-8ec3-73fc9990e5ae"],

Cell[TextData[{
 "The optimization involves generating ",
 ButtonBox["LLVM",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/LLVM"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/LLVM"],
 " code and then the assembler for the current machine architecture:"
}], "Text",ExpressionUUID->"a8ea03b8-99c1-4059-a609-b44cb302a972"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FunctionCompileExportString", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Typed", "[", 
          RowBox[{"arg", ",", "\"\<MachineReal\>\""}], "]"}], ",", 
         RowBox[{"Typed", "[", 
          RowBox[{"n", ",", "\"\<Integer64\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"Nest", "[", 
        RowBox[{"Sin", ",", "arg", ",", " ", "n"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<LLVM\>\""}], "\[IndentingNewLine]", "]"}], "//",
    "CreateDocument"}], ";"}]], "Input",ExpressionUUID->"e01dc04e-1132-4df8-\
8e04-0e2337699df0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FunctionCompileExportString", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Typed", "[", 
          RowBox[{"arg", ",", "\"\<MachineReal\>\""}], "]"}], ",", 
         RowBox[{"Typed", "[", 
          RowBox[{"n", ",", "\"\<Integer64\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"Nest", "[", 
        RowBox[{"Sin", ",", "arg", ",", " ", "n"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<Assembler\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"TargetSystem", "\[Rule]", "\"\<Windows-x86-64\>\""}]}], 
    "\[IndentingNewLine]", "]"}], "//", "CreateDocument"}], ";"}]], "Input",
 CellLabel->"",ExpressionUUID->"941d90cd-6281-4bea-880c-545e4208d20d"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"5d1736b4-5cba-441e-805b-f4fa29d67e09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"61a00348-ce16-4c22-b211-608ffcc1320a"],

Cell[CellGroupData[{

Cell["Compilation Types", "Subsection",ExpressionUUID->"58c417ec-4c5d-4e08-8db7-7fe2bc30f1be"],

Cell["The Typed command supports a range of different types:", "Text",ExpressionUUID->"f6c1f45e-1794-464f-aefe-91d85f957c6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellPrint", "[", "\[IndentingNewLine]", 
  RowBox[{"ExpressionCell", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Grid", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Type\>\"", ",", " ", "\"\<Description\>\""}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\\\"Boolean\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", "\"\<Boolean\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\\\"String\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", "\"\<A string type specifier\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"ComplexReal64\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", 
          "\"\<Complex number with IEEE double-precision real and imaginary \
parts\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\\\"Integer8\\\"\>\"", ",", " ", "\"\<CodeText\>\""}],
            "]"}], ",", " ", "\"\<8-bit signed integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"Integer18\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}],
           ",", " ", "\"\<16-bit signed integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"Integer32\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}],
           ",", " ", "\"\<32-bit signed integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"Integer64\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], "]"}],
           ",", " ", "\"\<64-bit signed integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"Integer128\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", "\"\<128-bit signed integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"MachineInteger\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", "\"\<Machine-sized signed integer\>\""}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\\\"Real32\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", "\"\<IEEE single-precision real number\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\\\"Real64\\\"\>\"", ",", " ", "\"\<CodeText\>\""}], 
           "]"}], ",", " ", "\"\<IEEE double-precision real number\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"UnsignedInteger8\\\"\>\"", ",", " ", "\"\<CodeText\>\""}],
            "]"}], ",", " ", "\"\<8-bit unsigned integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"UnsignedInteger16\\\"\>\"", ",", " ", 
            "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<16-bit unsigned integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"UnsignedInteger32\\\"\>\"", ",", " ", 
            "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<32-bit unsigned integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"UnsignedInteger64\\\"\>\"", ",", " ", 
            "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<64-bit unsigned integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"UnsignedInteger128\\\"\>\"", ",", " ", 
            "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<128-bit unsigned integer\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\\\"UnsignedMachineInteger\\\"\>\"", ",", " ", 
            "\"\<CodeText\>\""}], "]"}], ",", " ", 
          "\"\<Machine-sized unsigned integer\>\""}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", " ", "->", " ", "\"\<Text\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Alignment", " ", "->", " ", "Left"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"GrayLevel", "[", "0.95", "]"}], ",", "White"}], "}"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"GrayLevel", "[", "0.85", "]"}]}], "}"}]}], "}"}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Spacings", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "1.5"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", " ", "->", " ", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", " ", "->", " ", "Gray"}]}], "\[IndentingNewLine]",
      "]"}], ",", "\[IndentingNewLine]", "\"\<Output\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GeneratedCell", " ", "->", " ", "False"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[721]:=",ExpressionUUID->"67fc204a-b8ae-47ef-89f0-de69546ad37d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Type\"\>", "\<\"Description\"\>"},
    {
     StyleBox["\<\"\\\"Boolean\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"Boolean\"\>"},
    {
     StyleBox["\<\"\\\"String\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"A string type specifier\"\>"},
    {
     StyleBox["\<\"\\\"ComplexReal64\\\"\"\>", "CodeText",
      StripOnInput->
       False], "\<\"Complex number with IEEE double-precision real and \
imaginary parts\"\>"},
    {
     StyleBox["\<\"\\\"Integer8\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"8-bit signed integer\"\>"},
    {
     StyleBox["\<\"\\\"Integer18\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"16-bit signed integer\"\>"},
    {
     StyleBox["\<\"\\\"Integer32\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"32-bit signed integer\"\>"},
    {
     StyleBox["\<\"\\\"Integer64\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"64-bit signed integer\"\>"},
    {
     StyleBox["\<\"\\\"Integer128\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"128-bit signed integer\"\>"},
    {
     StyleBox["\<\"\\\"MachineInteger\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"Machine-sized signed integer\"\>"},
    {
     StyleBox["\<\"\\\"Real32\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"IEEE single-precision real number\"\>"},
    {
     StyleBox["\<\"\\\"Real64\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"IEEE double-precision real number\"\>"},
    {
     StyleBox["\<\"\\\"UnsignedInteger8\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"8-bit unsigned integer\"\>"},
    {
     StyleBox["\<\"\\\"UnsignedInteger16\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"16-bit unsigned integer\"\>"},
    {
     StyleBox["\<\"\\\"UnsignedInteger32\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"32-bit unsigned integer\"\>"},
    {
     StyleBox["\<\"\\\"UnsignedInteger64\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"64-bit unsigned integer\"\>"},
    {
     StyleBox["\<\"\\\"UnsignedInteger128\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"128-bit unsigned integer\"\>"},
    {
     StyleBox["\<\"\\\"UnsignedMachineInteger\\\"\"\>", "CodeText",
      StripOnInput->False], "\<\"Machine-sized unsigned integer\"\>"}
   },
   AutoDelete->False,
   BaseStyle->"Text",
   FrameStyle->GrayLevel[0.5],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        GrayLevel[0.95], 
        GrayLevel[1]}}, "RowsIndexed" -> {1 -> GrayLevel[0.85]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 GeneratedCell->False,ExpressionUUID->"b1874a66-ac7c-41c4-9a81-32e4a96ad68e"]
}, {2}]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Higher-dimension types",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"f3f2805e-68df-402e-b4ee-9b217d0153f0"],

Cell[TextData[{
 ButtonBox["TypeSpecifier",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/TypeSpecifier.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/TypeSpecifier.html"],
 " can specify higher-dimension types like lists and matrices of numbers:"
}], "Text",ExpressionUUID->"0ac3f9bd-5bd2-4986-9576-57c2d7997291"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"map", ",", "compiledMap"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"map", "[", "arg_", "]"}], ":=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "^", "2"}], "&"}], ",", " ", "arg"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMap", "[", "arg_", "]"}], "=", 
   RowBox[{"FunctionCompile", "[", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{"arg", ",", 
        RowBox[{
         RowBox[{"TypeSpecifier", "[", "\"\<PackedArray\>\"", "]"}], "[", 
         RowBox[{"\"\<Real64\>\"", ",", " ", "1"}], "]"}]}], "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], ",", "arg"}], "]"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"",ExpressionUUID->"9288fc8a-3d16-4662-a798-adf5a6916a43"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"map", "[", 
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"10", "^", "5"}], "]"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"95e2bcee-b0d4-461e-afbd-ee7fd2bd6e84"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"compiledMap", "[", 
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"10", "^", "5"}], "]"}]}], "]"}], ";"}], "//", " ", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"35ef9e2a-ff0d-431d-97c3-70898855b3e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" DataStructure",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"a7ba1951-3015-4702-b751-db5734ca8655"],

Cell["The compiler understands DataStructure objects:", "Text",ExpressionUUID->"be443e24-756e-454c-9b28-61b596050d89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dn", "=", 
   RowBox[{"FunctionCompile", "[", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Typed", "[", 
        RowBox[{"n", ",", "\"\<Integer64\>\""}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Block", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"queue", "=", 
          RowBox[{"CreateDataStructure", "[", "\"\<Queue\>\"", "]"}]}], "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "3"}], "]"}], "===", "0"}], ",", 
             RowBox[{"queue", "[", "\"\<Pop\>\"", "]"}], ",", 
             RowBox[{"queue", "[", 
              RowBox[{"\"\<Push\>\"", ",", "i"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"queue", "[", "\"\<Pop\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"",ExpressionUUID->"f6cded21-b410-4652-92b2-5f85a2eec58b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dn", "[", "50000", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellLabel->"",ExpressionUUID->"110c4e39-642e-4cbe-a3fe-d68e5d45a486"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example:",
 StyleBox[" Compilation errors",
  FontColor->GrayLevel[0.5]]
}], "Subsubsection",ExpressionUUID->"91c1ba12-a262-4a6d-bf78-53e4fec978d0"],

Cell["\<\
Watch out for compilation errors, such as unassigned variables and bad types:\
\>", "Text",ExpressionUUID->"26545377-eb0d-43b9-afc2-0fb01fbf9bb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"boolFunction1", " ", "=", " ", 
    RowBox[{"Function", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Typed", "[", 
        RowBox[{"cond", ",", " ", "\"\<Boolean\>\""}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"cond", ",", " ", 
           RowBox[{"x", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "x"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FunctionCompile", "[", "boolFunction1", "]"}]}], "Input",
 CellLabel->"",ExpressionUUID->"bfb319ce-eed9-425e-9f1e-7af087c370e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"boolFunction2", " ", "=", " ", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Typed", "[", 
        RowBox[{"x", ",", " ", "\"\<Boolean\>\""}], "]"}], "}"}], ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FunctionCompile", "[", "boolFunction2", "]"}]}], "Input",
 CellLabel->"",ExpressionUUID->"02c84145-3bde-4718-8efa-0b3d42e03b7e"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"5681863a-21b0-431b-926b-345fd2b451c3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"867f84c0-2df5-44cb-bb67-9ee71fad894e"],

Cell[CellGroupData[{

Cell["Caching and Memoization", "Section",
 CellTags->
  "CachingAndMemoization",ExpressionUUID->"9762e5b6-a53d-4b21-8119-\
eb206099e6ae"],

Cell["\<\
Often you wish to prevent repeated calculations by storing past evaluations. \
The standard idiom for this is to add definitions to the function as they are \
computed:\
\>", "Text",ExpressionUUID->"6af0494a-d04f-4c36-8636-56a72aab8668"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "=", "code"}]}], ";"}]], "Input",
 Evaluatable->False,ExpressionUUID->"4f2d02e8-449c-4557-ac89-827d0f6340eb"],

Cell[TextData[{
 "For example, this recursive definition for ",
 ButtonBox["Fibonacci numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Fibonacci_number"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Fibonacci_number"],
 " is intrinsically very slow:"
}], "Text",ExpressionUUID->"aa2da585-36ee-4aac-90fc-5c91031c9963"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fib", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fib", "[", 
     RowBox[{"x", "-", "1"}], "]"}], "+", 
    RowBox[{"fib", "[", 
     RowBox[{"x", "-", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"fib", "[", "2", "]"}], "=", "1"}]}], ";"}]}], "Input",ExpressionU\
UID->"8ebcda14-7906-4c21-be1e-38d0b42ba493"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"fib", "[", "30", "]"}], "]"}]], "Input",ExpressionUUID->"236891d7-\
a345-4007-9377-8b24dd1ce0f6"],

Cell["Changing the definition to remember values makes it fast:", "Text",ExpressionUUID->"e473ae3c-8985-4fd8-b172-be1f21356f6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fib2", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib2", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fib2", "[", "x", "]"}], "=", 
    RowBox[{
     RowBox[{"fib2", "[", 
      RowBox[{"x", "-", "1"}], "]"}], "+", 
     RowBox[{"fib2", "[", 
      RowBox[{"x", "-", "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib2", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"fib2", "[", "2", "]"}], "=", "1"}]}], ";"}]}], "Input",Expression\
UUID->"b2f70955-1b23-4df0-bc52-77a3f15756d6"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"fib2", "[", "30", "]"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"77bc015b-7f82-49f4-8d2c-f9866ce1585f"],

Cell["\<\
However, all of these cached values have to be stored somewhere:\
\>", "Text",ExpressionUUID->"fe54cbd3-e4c3-47fa-97b0-47c3271d3d2c"],

Cell[BoxData[
 RowBox[{"DownValues", "[", "fib2", "]"}]], "Input",ExpressionUUID->"688a7dda-95c8-4bc2-a44d-c2d89a257c2e"],

Cell[TextData[{
 "If you wish to constrain the time period that cached values are maintained, \
use ",
 ButtonBox["Once",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Once.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Once.html"],
 ":"
}], "Text",ExpressionUUID->"f5b6b499-2b32-485f-bdc9-03c77355bbb5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fib3", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib3", "[", "x_", "]"}], ":=", 
   RowBox[{"Once", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fib3", "[", 
       RowBox[{"x", "-", "1"}], "]"}], "+", 
      RowBox[{"fib3", "[", 
       RowBox[{"x", "-", "2"}], "]"}]}], ",", 
     RowBox[{"PersistenceTime", "\[Rule]", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib3", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"fib3", "[", "2", "]"}], "=", "1"}]}], ";"}]}], "Input",Expression\
UUID->"532977ca-2ff6-47ab-944c-78111033d14a"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"fib3", "[", "30", "]"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"4db59449-9ce9-438f-9390-85632b5e8f5f"],

Cell["This time, the values are stored as persistent objects:", "Text",ExpressionUUID->"99b572c0-6f8a-474e-b1a4-a473e014e78d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PersistentObjects", "[", "\"\<Hashes/Once/*\>\"", "]"}], "//", 
  "Short"}]], "Input",ExpressionUUID->"9f6d86e6-a7cd-4e7f-83a8-0d7c85daed4a"],

Cell[TextData[{
 "These can be deleted with ",
 ButtonBox["DeleteObject",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/DeleteObject.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/DeleteObject.html"],
 ":"
}], "Text",ExpressionUUID->"7b83bcaf-0f90-42cd-9a0c-7324b9a4daf7"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", 
  RowBox[{"PersistentObjects", "[", "\"\<Hashes/Once/*\>\"", "]"}], 
  "]"}]], "Input",ExpressionUUID->"fa86c6d4-41a6-4562-8916-4bcbf2adff46"],

Cell[TextData[{
 "If you wish to constrain the amount of stored values, you can use the data \
structure ",
 Cell[BoxData["\<\"LeastRecentlyUsedCache\"\>"], "Input",ExpressionUUID->
  "11c916f6-0029-4ff0-b20c-6aefd1b59574"],
 ":"
}], "Text",ExpressionUUID->"e5b5f038-f153-4c98-9d85-b84cb2e1ca24"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "fib4", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fibCache", "=", 
    RowBox[{"CreateDataStructure", "[", 
     RowBox[{"\"\<LeastRecentlyUsedCache\>\"", ",", "5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fib4", "[", "x_", "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"compute", ",", 
        RowBox[{"previous", " ", "=", 
         RowBox[{"fibCache", "[", 
          RowBox[{"\"\<Lookup\>\"", ",", "x"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MissingQ", "[", "previous", "]"}]}], ",", 
        "\[IndentingNewLine]", "previous", ",", "\[IndentingNewLine]", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"compute", " ", "=", " ", 
           RowBox[{
            RowBox[{"fib4", "[", 
             RowBox[{"x", "-", "1"}], "]"}], "+", 
            RowBox[{"fib4", "[", 
             RowBox[{"x", "-", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"fibCache", "[", 
           RowBox[{"\"\<Insert\>\"", ",", 
            RowBox[{"x", "->", "compute"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "compute"}], "\[IndentingNewLine]", ")"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib4", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"fib4", "[", "2", "]"}], "=", "1"}]}], ";"}]}], "Input",Expression\
UUID->"79ddd8f3-c5b8-42d8-a567-ecd17f6183aa"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"fib4", "[", "30", "]"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"686bb544-c2a3-4d3c-87f3-0764c61ba8da"],

Cell[BoxData[
 RowBox[{"fibCache", "[", "\"\<Keys\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"87e289bb-ecb1-497e-8be9-8776bcae842e"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"07e97145-cd37-4d7b-a942-8b3f1a48a615"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b05b724a-28c2-4701-b6bb-d11770733b15"],

Cell[CellGroupData[{

Cell["Additional Tips", "Section",
 CellTags->
  "AdditionalTips",ExpressionUUID->"4a3c771c-db88-4c4f-bd3c-a079cbe826a0"],

Cell[CellGroupData[{

Cell["Use pure functions", "Subsubsection",ExpressionUUID->"34d9960e-a93b-466a-9e41-03fd03534fae"],

Cell["\<\
When you repeatedly apply a function, pure (anonymous) functions are faster:\
\>", "Text",ExpressionUUID->"6c7dab15-a297-47ec-8f61-a87164259f1b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"10", "^", "7"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"squarePlusOne", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}]}], ";"}]}], "Input",ExpressionUUID->\
"5d781740-18b2-49ca-b62f-181c9bcb68f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"squarePlusOne", ",", "data"}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"1e969e8b-0b7e-41bb-937f-\
ac09d0f25258"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "^", "2"}], "+", "1"}], "&"}], ",", "data"}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}]], "Input",ExpressionUUID->"9f2e4ee3-6c40-\
4cee-ae31-f412206b4bd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use stricter pattern matching", "Subsubsection",ExpressionUUID->"20e17cb0-01a0-43c4-937e-bbe35bacf9aa"],

Cell[TextData[{
 "This is a conceptually concise way to represent ",
 ButtonBox["bubble sort",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Bubble_sort"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Bubble_sort"],
 ". With its loose patterns, the repeated searching and comparing is \
expensive:"
}], "Text",ExpressionUUID->"23472abb-0a4c-4c1a-afe3-e786e2811b87"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bubbleSort", "[", "data_", "]"}], ":=", 
    RowBox[{"data", "//.", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a___", ",", "b_", ",", "c_", ",", "d___"}], "}"}], "/;", 
       RowBox[{"b", ">", "c"}]}], ":>", 
      RowBox[{"{", 
       RowBox[{"a", ",", "c", ",", "b", ",", "d"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", "300"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bubbleSort", "[", "data", "]"}], ";"}], "//", 
  "AbsoluteTiming"}]}], "Input",ExpressionUUID->"88589ba1-9c95-4020-b9c7-\
0f8e71112bfa"],

Cell["\<\
This more declarative version of the same algorithm is more complex code but \
executes much faster:\
\>", "Text",ExpressionUUID->"b3527cf0-f4d2-423d-a1bb-01ba9d2c567a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbleSort2", "[", "data0_List", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "=", "data0"}], ",", 
      RowBox[{"changed", "=", "True"}], ",", "temp"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TrueQ", "[", "changed", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"changed", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ">", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"data", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "temp"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"changed", "=", "True"}]}], "\[IndentingNewLine]", 
             ")"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "data"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"3814ab28-9314-4e18-8f63-f382e6b30a78"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bubbleSort2", "[", "data", "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"cd946707-331a-4c0e-9523-\
cce5160cc7e8"],

Cell[TextData[{
 "Of course, the built-in ",
 ButtonBox["Sort",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Sort.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Sort.html"],
 " (which implements a much more sensible sorting algorithm) is faster still:"
}], "Text",ExpressionUUID->"4583b368-e655-46d1-9520-48468fc1fc58"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sort", "[", "data", "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",ExpressionUUID->"cc4cf487-073b-41d7-b046-\
c69ffc0b6e44"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use Sow and Reap", "Subsubsection",ExpressionUUID->"4909cd9e-dd25-4c86-b82f-d6b1838eb07e"],

Cell[TextData[{
 "When working with lists, use ",
 ButtonBox["Sow",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Sow.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Sow.html"],
 " and ",
 ButtonBox["Reap",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Reap.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Reap.html"],
 " instead of ",
 ButtonBox["Append",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Append.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Append.html"],
 " or ",
 ButtonBox["Prepend",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Prepend.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Prepend.html"],
 ":"
}], "Text",ExpressionUUID->"a98f6496-281d-485f-ae6d-52883d2a1b42"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"data", ",", " ", 
       RowBox[{"RandomReal", "[", "x", "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"10", "^", "4"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
    "\[IndentingNewLine]", "data"}], "\[IndentingNewLine]", "]"}]], "Input",Ex\
pressionUUID->"13fe13a7-b419-4a61-98cd-8a769c883f1f"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sow", "[", 
        RowBox[{"RandomReal", "[", "x", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"10", "^", "4"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]",
   "]"}]], "Input",ExpressionUUID->"e9246969-c299-427d-ab7b-4cffc64d8950"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use Block or With", "Subsubsection",
 WholeCellGroupOpener->
  True,ExpressionUUID->"53b8b2f0-23fe-43ac-9f34-86a71a83673a"],

Cell[TextData[{
 "Use ",
 ButtonBox["Block",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Block.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Block.html"],
 " or ",
 ButtonBox["With",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/With.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/With.html"],
 " instead of ",
 ButtonBox["Module",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Module.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Module.html"],
 ":"
}], "Text",ExpressionUUID->"1614e0c5-91c1-4feb-a055-f3b77d95664c"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", " ", "=", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"1", "/", "x"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", "^", "6"}], "}"}]}], "]"}], ";"}], "]"}]], "Input",Express\
ionUUID->"30ae4c1b-3f2e-43c6-a460-7c60ea002edb"],

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", " ", "=", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"1", "/", "x"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", "^", "6"}], "}"}]}], "]"}], ";"}], "]"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", " ", "=", " ", "2."}], "}"}], ",", " ", 
       RowBox[{"1", "/", "x"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", "^", "6"}], "}"}]}], "]"}], ";"}], "]"}]}], "Input",Expres\
sionUUID->"5fa5d694-62ff-44d1-bf5f-07ff7efe3df5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"59241062-74bf-4c9e-b997-f78fba1ad180"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellTags->"Summary",ExpressionUUID->"1dec6db0-67a0-41aa-ae6f-aabc78dc3f4e"],

Cell["Use built-in functions (and use fewer functions in general).", "Item",ExpressionUUID->"00bf000d-01ae-4a60-bdc5-64e1acb0a580"],

Cell["\<\
Use functional programming to operate on data as a whole; do not loop through \
indexed data.\
\>", "Item",ExpressionUUID->"e7db4bd6-e711-41c9-ba35-a6a4199bd0d9"],

Cell["Use special data structures.", "Item",ExpressionUUID->"088aec40-6c02-42a7-b17d-60439488d471"],

Cell["Parallelize.", "Item",ExpressionUUID->"fcc9d98b-8dde-48e1-a89a-6d6b641cac42"],

Cell["Compile code.", "Item",ExpressionUUID->"1bda6a51-8101-421a-814c-bd0fdd3d1835"],

Cell["Store results with caching or memoization.", "Item",ExpressionUUID->"ed79e0b7-a0e4-434d-8a8b-ea83bac89d7b"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"ff346465-4f93-4e22-b2aa-9b84fba91c45"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1018},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
WindowTitle->"Writing High-Performance Code",
TaggingRules->{
 "PresenterSettings" -> {
   "ShowNavigationBar" -> True, 
    "SlideBreakStyles" -> {"Title", "Chapter", "Section"}, "ShowSlideBreaks" -> 
    True, "Theme" -> {
     "ThemeName" -> "Default", "FontSetName" -> "Default", "ColorSetName" -> 
      "Default"}, "LastColorUsed" -> Dynamic[
      CurrentValue[{StyleHints, "ColorSet", "Display2"}]], 
    "UserModifications" -> {{"Epigraph", FontColor :> Dynamic[
         CurrentValue[{StyleHints, "ColorSet", "Display2"}]]}}, 
    "WindowSize" -> {1632, 890}, "WindowMargins" -> {{41, 247}, {-327, 390}}, 
    "Dialogs" -> {
     "SlideBreakDefaults" -> 0, "PresenterControlsPalette" -> 0}}, 
  "SlideshowSettings" -> {"Toolbar" -> True}, "TryRealOnly" -> False},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], MenuCommandKey :> "-"], 
      Cell[
       StyleData[All, "SlideShow"], MenuCommandKey :> "="]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo", StyleDefinitions -> StyleData["Title"]], 
          CellMargins -> {{120, 0}, {0, 130}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellFrameMargins -> {{0, 0}, {0, 0}}, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell["Title", "Subsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
          FontSlant -> "Plain", FontTracking -> -0.75, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> 
          RGBColor[
           0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
         Cell[
          StyleData["Title", "SlideShow"], CellMargins -> {{120, 0}, {0, 40}},
           FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
          "Regular", FontSlant -> "Plain", FontTracking -> -0.75, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> 
          RGBColor[
           0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
         Cell[
          StyleData[
          "Title", "Slideshow Working", StyleDefinitions -> 
           StyleData["Title", "SlideShow"]]], 
         Cell[
          StyleData[
          "Title", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Title", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Title", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Title", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subtitle"], CellMargins -> {{120, 0}, {0, 12}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData["Subtitle", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> "Source Sans Pro",
           FontSize -> 40, FontWeight -> "Regular", FontSlant -> "Plain", 
          FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData[
          "Subtitle", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subtitle", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subtitle", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subtitle", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TitleGraphic"], CellMargins -> {{120, 0}, {0, 25}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["TitleGraphic", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
          "NaturalLanguage", FormatType -> StandardForm, ShowStringCharacters -> 
          False, FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
           StyleData["TitelGraphic", "SlideShow"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell["Section", "Subsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
          ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
          "Regular", FontSlant -> "Plain", FontTracking -> -0.5, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}}, 
          ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
          LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
          70, FontWeight -> "Regular", FontSlant -> "Plain", 
          FontTracking -> -0.5, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData[
          "Section", "Slideshow Working", StyleDefinitions -> 
           StyleData["Section", "SlideShow"]]], 
         Cell[
          StyleData[
          "Section", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Section", "SlideShow"]]], 
         Cell[
          StyleData[
          "Section", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Section", "SlideShow"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> "Source Sans Pro",
           FontSize -> 40, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
         Cell[
          StyleData["Subsection", "SlideShow"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 40}}, LineSpacing -> {1, 2}, 
          FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
         Cell[
          StyleData[
          "Subsection", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subsection", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subsection", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subsection", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subsection", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subsection", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> "Source Sans Pro",
           FontSize -> 30, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
          "Inline", CellMargins -> {{120, 0}, {0, 40}}, LineSpacing -> {1, 2},
           FontFamily -> "Source Sans Pro", FontSize -> 30, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData[
          "Subsubsection", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subsubsection", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subsubsection", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subsubsection", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsubsection"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 30}}, FontFamily -> "Source Sans Pro",
           FontSize -> 25, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[0.9, 0.2, 0.2]], 
         Cell[
          StyleData["Subsubsubsection", "SlideShow"], ShowGroupOpener -> 
          "Inline", CellMargins -> {{120, 0}, {0, 30}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 25, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[0.9, 0.2, 0.2]]}, Open]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       StyleData["EndOfSlide"], CellFrame -> {{False, False}, {False, True}}, 
       ShowCellBracket -> False, CellMargins -> {{120, 0}, {100, 15}}, 
       CellFrameColor -> GrayLevel[0.85]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.8]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{140, 0}, {0, 15}}], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{140, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{160, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Open]], 
      Cell[
       StyleData["Subsubitem"], CellMargins -> {{180, 0}, {0, 15}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{145, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 
          15, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{180, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{180, Inherited}, {Inherited, Inherited}}]}, Open]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{120, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Open]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["WolframAlphaShort"], CellMargins -> {{120, 0}, {0, 15}}, 
       MenuSortingValue -> 10000], 
      Cell[
       StyleData["WolframAlphaLong"], CellMargins -> {{117, 0}, {0, 15}}, 
       MenuSortingValue -> 10000], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellMargins -> {{120, 10}, {5, 20}}, 
          MenuSortingValue -> 10000, FontSize -> 16], 
         Cell[
          StyleData["Program", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, FontSize -> 20], 
         Cell[
          StyleData[
          "Program", "Slideshow Working", StyleDefinitions -> 
           StyleData["Program", "SlideShow"]]], 
         Cell[
          StyleData[
          "Program", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Program", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Program", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Program", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[
                  1., 0.592156862745098, 
                   0.10196078431372549`], $CellContext`BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{120, 10}, {5, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{120, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{120, 10}, {5, 10}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Open]], 
      Cell[
       StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}}, 
       CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> GrayLevel[0.8], 
       MenuSortingValue -> 10000]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> 
  "13.2 for Microsoft Windows (64-bit) (November 18, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"f5e47fe3-ee5d-4a20-85a9-e24d0fdb3707"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[623, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
   CellTags->"SlideShowHeader"],
  Cell[16079, 289, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"861554b2-f929-422f-ad8f-880ec365007a",
   CellTags->"SlideShowHeader"],
  Cell[19275, 386, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ff1d4f03-5607-4935-ad45-73b6c0cb3d3d",
   CellTags->"SlideShowHeader"],
  Cell[26542, 621, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"29d772c4-059b-454a-9ab7-8451076480a8",
   CellTags->"SlideShowHeader"],
  Cell[31552, 781, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0c4673be-97e0-416b-8494-0e0c30d18e89",
   CellTags->"SlideShowHeader"],
  Cell[35676, 903, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9fdc0110-45b9-4fa4-83f0-32bb9576b9c0",
   CellTags->"SlideShowHeader"],
  Cell[42070, 1088, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1bcf60a2-ceec-47ca-ae2d-5bc3c4895e35",
   CellTags->"SlideShowHeader"],
  Cell[57959, 1496, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"33a2f77f-9b8e-4d77-b714-8e671bb81104",
   CellTags->"SlideShowHeader"],
  Cell[63580, 1666, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"84c05ece-78de-4236-a274-1310565f2f39",
   CellTags->"SlideShowHeader"],
  Cell[88612, 2295, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"22780e35-74a5-40e0-80d4-d47ba2c390e9",
   CellTags->"SlideShowHeader"],
  Cell[94357, 2460, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"61a00348-ce16-4c22-b211-608ffcc1320a",
   CellTags->"SlideShowHeader"],
  Cell[110095, 2881, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"867f84c0-2df5-44cb-bb67-9ee71fad894e",
   CellTags->"SlideShowHeader"],
  Cell[117855, 3111, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b05b724a-28c2-4701-b6bb-d11770733b15",
   CellTags->"SlideShowHeader"],
  Cell[128500, 3431, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"59241062-74bf-4c9e-b997-f78fba1ad180",
   CellTags->"SlideShowHeader"]},
 "GeneralAdvice"->{
  Cell[19422, 392, 119, 2, 139, "Section",ExpressionUUID->"b60b309a-e8ce-4590-94cb-e35af0f614e4",
   CellTags->"GeneralAdvice"]},
 "SpecialDataStructures"->{
  Cell[35823, 909, 138, 3, 139, "Section",ExpressionUUID->"5a72fa5b-0580-4e17-8fe9-49279b64b97b",
   CellTags->"SpecialDataStructures"]},
 "Parallelization"->{
  Cell[63727, 1672, 122, 2, 139, "Section",ExpressionUUID->"d80f9791-d265-4c4a-b7ae-5bfc48b68de3",
   CellTags->"Parallelization"]},
 "CodeCompilation"->{
  Cell[88759, 2301, 123, 2, 139, "Section",ExpressionUUID->"662751af-dde1-48d2-8e68-2ae21350ad20",
   CellTags->"CodeCompilation"]},
 "CachingAndMemoization"->{
  Cell[110242, 2887, 138, 3, 139, "Section",ExpressionUUID->"9762e5b6-a53d-4b21-8119-eb206099e6ae",
   CellTags->"CachingAndMemoization"]},
 "AdditionalTips"->{
  Cell[118002, 3117, 121, 2, 139, "Section",ExpressionUUID->"4a3c771c-db88-4c4f-bd3c-a079cbe826a0",
   CellTags->"AdditionalTips"]},
 "Summary"->{
  Cell[128647, 3437, 103, 1, 139, "Section",ExpressionUUID->"1dec6db0-67a0-41aa-ae6f-aabc78dc3f4e",
   CellTags->"Summary"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 165057, 4229},
 {"GeneralAdvice", 167116, 4258},
 {"SpecialDataStructures", 167274, 4261},
 {"Parallelization", 167434, 4264},
 {"CodeCompilation", 167589, 4267},
 {"CachingAndMemoization", 167750, 4270},
 {"AdditionalTips", 167911, 4273},
 {"Summary", 168058, 4276}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[623, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
 CellTags->"SlideShowHeader"],
Cell[762, 27, 14994, 251, 134, "Title",ExpressionUUID->"a893d9a9-8c7a-494a-9003-d97746207549"],
Cell[15759, 280, 93, 0, 143, "Title",ExpressionUUID->"a8df9a6b-9e40-4b3a-8827-3246bad28988"],
Cell[15855, 282, 98, 0, 63, "Subtitle",ExpressionUUID->"fb7c7004-a3e6-445c-890f-bab13ac91d09"],
Cell[15956, 284, 86, 0, 138, "EndOfSlide",ExpressionUUID->"d6812268-cb9b-43c6-81e5-41dfd7df1bc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16079, 289, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"861554b2-f929-422f-ad8f-880ec365007a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16226, 295, 86, 0, 139, "Section",ExpressionUUID->"4a6ca71e-1029-43f8-802f-05dccb8c18ec"],
Cell[16315, 297, 405, 9, 35, "Text",ExpressionUUID->"270cca72-1ad1-4657-9f8b-e2951e4f5cec"],
Cell[CellGroupData[{
Cell[16745, 310, 88, 0, 79, "Subsubsection",ExpressionUUID->"65edbe7a-cc22-4e57-82bc-5edba2f1c51c"],
Cell[CellGroupData[{
Cell[16858, 314, 199, 4, 35, "Item",ExpressionUUID->"f0a9b762-39cd-4e97-9519-7e680fc06ad1"],
Cell[17060, 320, 92, 0, 33, "Subitem",ExpressionUUID->"3770d5d2-b2cc-4281-99e7-89c99fc39b6c"],
Cell[17155, 322, 96, 0, 33, "Subitem",ExpressionUUID->"4a055d88-6065-4ad1-abe8-f602306a12ba"],
Cell[17254, 324, 96, 0, 33, "Subitem",ExpressionUUID->"82a7c854-d9f3-4dfe-ad7d-5cda75b18adf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17387, 329, 216, 4, 35, "Item",ExpressionUUID->"5425d8dc-335f-459e-9a5f-8b9832783655"],
Cell[17606, 335, 79, 0, 33, "Subitem",ExpressionUUID->"92954dac-22d3-4c89-af81-a8160887ba11"],
Cell[17688, 337, 87, 0, 33, "Subitem",ExpressionUUID->"40798cab-eb92-42db-9208-195f54d7a634"],
Cell[17778, 339, 92, 0, 33, "Subitem",ExpressionUUID->"e21b75fb-0e6b-4905-920a-f411388c3a8a"]
}, Open  ]],
Cell[17885, 342, 202, 4, 35, "Item",ExpressionUUID->"3572ba4d-a9b2-47b6-b6f4-f97306e3f441"],
Cell[CellGroupData[{
Cell[18112, 350, 203, 4, 35, "Item",ExpressionUUID->"f7753bf6-dad3-4540-aaf8-7ddecc0787c6"],
Cell[18318, 356, 89, 0, 33, "Subitem",ExpressionUUID->"6f9e7504-008c-4ecf-b7df-79be4cff35c0"],
Cell[18410, 358, 91, 0, 33, "Subitem",ExpressionUUID->"08e3c345-342e-4050-82c1-f9f214530d1a"]
}, Open  ]],
Cell[18516, 361, 216, 4, 35, "Item",ExpressionUUID->"d4f6f206-71ef-477f-957a-8f0804c4daa0"],
Cell[18735, 367, 201, 4, 35, "Item",ExpressionUUID->"19b4398e-f94c-4bf5-acd4-26efa416fa2a"],
Cell[18939, 373, 186, 4, 35, "Item",ExpressionUUID->"d2b9d8cf-6451-4b47-9d67-2f2b8c802a94"],
Cell[19128, 379, 86, 0, 138, "EndOfSlide",ExpressionUUID->"9794d47f-26eb-4b19-9a74-a8b317d15a22"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19275, 386, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ff1d4f03-5607-4935-ad45-73b6c0cb3d3d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[19422, 392, 119, 2, 139, "Section",ExpressionUUID->"b60b309a-e8ce-4590-94cb-e35af0f614e4",
 CellTags->"GeneralAdvice"],
Cell[CellGroupData[{
Cell[19566, 398, 95, 0, 91, "Subsection",ExpressionUUID->"0773a62b-ed0a-4dd3-b70d-55e7c0fa0a15"],
Cell[19664, 400, 240, 4, 35, "Text",ExpressionUUID->"1f194888-7dd6-4937-827e-7ab69bb6f214"],
Cell[19907, 406, 111, 0, 35, "Item",ExpressionUUID->"2cb8bd92-3a78-47d0-9e7d-b1f9a5adbc8b"],
Cell[20021, 408, 185, 3, 35, "Item",ExpressionUUID->"1a52ae97-d1fe-4171-a153-b2c22a975fd8"],
Cell[20209, 413, 128, 0, 35, "Item",ExpressionUUID->"86e36a96-7e6d-4782-8ad5-b43559fd6578"],
Cell[CellGroupData[{
Cell[20362, 417, 182, 4, 79, "Subsubsection",ExpressionUUID->"1aa816f8-5fc4-43ae-946e-cf82615ca933"],
Cell[20547, 423, 232, 3, 35, "Text",ExpressionUUID->"6887dabb-4e0e-46de-b01f-9095a8252cf1"],
Cell[20782, 428, 244, 7, 40, "Input",ExpressionUUID->"be2202ec-e23e-43ff-83ec-47b80149f954"],
Cell[21029, 437, 504, 15, 40, "Input",ExpressionUUID->"b52d6323-c274-4ff2-ac45-f16ece39318c"],
Cell[21536, 454, 164, 3, 35, "Text",ExpressionUUID->"c5226ab2-a36e-48d4-8600-6b71d6abb305"],
Cell[21703, 459, 155, 3, 40, "Input",ExpressionUUID->"793031ad-942a-4ae5-a012-cb37b1eaed22"],
Cell[21861, 464, 203, 3, 35, "Text",ExpressionUUID->"76f413fd-8f9c-4351-b770-832010e3243d"],
Cell[22067, 469, 399, 12, 40, "Input",ExpressionUUID->"a06d568a-f25d-416e-b6c9-349079e82ff4"],
Cell[22469, 483, 202, 6, 40, "Input",ExpressionUUID->"cb10d864-3ca1-4b15-b31a-79530a5290f5"],
Cell[22674, 491, 175, 5, 40, "Input",ExpressionUUID->"2c5a8f3b-239c-4f82-86ac-496618272c89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22886, 501, 165, 4, 79, "Subsubsection",ExpressionUUID->"cb8e1a72-bb30-432e-b620-054a2af5d880"],
Cell[23054, 507, 373, 8, 35, "Text",ExpressionUUID->"83bea516-64a7-4e67-811e-5b7f1e1bacd3"],
Cell[23430, 517, 266, 8, 40, "Input",ExpressionUUID->"2c04466e-e55e-46c9-ae10-0abe3f644b98"],
Cell[23699, 527, 151, 2, 35, "Text",ExpressionUUID->"f64c48b0-0e18-4f0f-a29b-7ea4a6aacb17"],
Cell[23853, 531, 231, 7, 40, "Input",ExpressionUUID->"8f143192-5821-451b-b86f-086e1326feba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24121, 543, 168, 4, 79, "Subsubsection",ExpressionUUID->"196c276f-e1d8-4b03-9804-b1ac59829954"],
Cell[24292, 549, 288, 4, 35, "Text",ExpressionUUID->"bad1dc55-d845-4efd-9b33-c9224aa17030"],
Cell[24583, 555, 454, 14, 79, "Input",ExpressionUUID->"980f9492-9fb4-4b3d-b5e8-d4434372d992"],
Cell[25040, 571, 561, 14, 35, "Text",ExpressionUUID->"737a13c5-6afb-4776-adbe-8866ab23f9dc"],
Cell[25604, 587, 206, 6, 40, "Input",ExpressionUUID->"89e22ae1-c6f6-4970-a92c-eccd1f9a4119"],
Cell[25813, 595, 222, 3, 35, "Text",ExpressionUUID->"6920b26a-8d89-4411-8992-3c6ed0094b9c"],
Cell[26038, 600, 342, 11, 40, "Input",ExpressionUUID->"3a09a5cc-54b8-4064-b3f3-ecd02eb73cfb"],
Cell[26383, 613, 86, 0, 138, "EndOfSlide",ExpressionUUID->"1f075f09-fafd-4401-8b48-3be49376171e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26542, 621, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"29d772c4-059b-454a-9ab7-8451076480a8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[26689, 627, 99, 0, 91, "Subsection",ExpressionUUID->"07980b8e-95fb-42bc-a5c5-c194a92b4aa4"],
Cell[26791, 629, 142, 2, 35, "Text",ExpressionUUID->"27dc7cba-c606-49d9-a147-3c0109fc3713"],
Cell[26936, 633, 120, 2, 40, "Input",ExpressionUUID->"59d17d6a-6d85-4f1d-966d-e58129abe807"],
Cell[27059, 637, 125, 2, 40, "Input",ExpressionUUID->"a96f33da-555f-46ce-adcf-7107fadb8733"],
Cell[27187, 641, 249, 4, 35, "Text",ExpressionUUID->"da2cf505-0501-47ee-9dd1-c6167427d82b"],
Cell[27439, 647, 121, 2, 40, "Input",ExpressionUUID->"ffe48267-707f-4c9c-8d67-ea7240e709fe"],
Cell[27563, 651, 182, 3, 35, "Item",ExpressionUUID->"fff2bb3f-5bc6-42b1-98a5-c5c9ea9f3395"],
Cell[27748, 656, 160, 3, 35, "Item",ExpressionUUID->"d294a8e2-8f6d-4673-94bd-b0eff7440d5e"],
Cell[27911, 661, 378, 8, 35, "Item",ExpressionUUID->"c007f7e0-5c43-4141-bbc7-1d3f27707e52"],
Cell[CellGroupData[{
Cell[28314, 673, 165, 4, 79, "Subsubsection",ExpressionUUID->"4673193b-fea3-4486-93a1-00576498db1b"],
Cell[28482, 679, 115, 0, 35, "Text",ExpressionUUID->"18dd5d11-8e14-4769-9201-940ca8371f0e"],
Cell[28600, 681, 534, 16, 101, "Input",ExpressionUUID->"d4e56c70-f29e-4adf-b765-94f1582654c2"],
Cell[29137, 699, 202, 3, 35, "Text",ExpressionUUID->"d665ff6b-df1e-4eb0-8c36-75d781c65c54"],
Cell[29342, 704, 207, 6, 40, "Input",ExpressionUUID->"90697919-2897-44cd-b73d-007dad87993b"],
Cell[29552, 712, 166, 3, 35, "Text",ExpressionUUID->"80829f2a-45de-4180-a921-107fd907ed5d"],
Cell[29721, 717, 187, 5, 40, "Input",ExpressionUUID->"b2b86a88-22a7-499e-b3c3-2264d5f09227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29945, 727, 165, 4, 79, "Subsubsection",ExpressionUUID->"02454e06-b4bd-4452-84d7-0e4ef04e3121"],
Cell[30113, 733, 170, 3, 35, "Text",ExpressionUUID->"54b6577b-e204-4ee1-b1a8-15a4f0b05496"],
Cell[30286, 738, 321, 10, 57, "Input",ExpressionUUID->"7d7ed0bd-d8f7-4270-bda8-92291fec9e60"],
Cell[30610, 750, 109, 1, 40, "Input",ExpressionUUID->"eb7acb6e-243e-4bf9-9618-02ab43836fb8"],
Cell[30722, 753, 355, 7, 35, "Text",ExpressionUUID->"2bb58758-4cd8-4362-a62c-ec0cc40e519f"],
Cell[31080, 762, 322, 10, 57, "Input",ExpressionUUID->"6dd3b470-649a-422e-af8a-7180a3236754"],
Cell[31405, 774, 86, 0, 138, "EndOfSlide",ExpressionUUID->"15feceab-9617-4752-90f3-a7dfc41bb53a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31552, 781, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0c4673be-97e0-416b-8494-0e0c30d18e89",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[31699, 787, 99, 0, 91, "Subsection",ExpressionUUID->"edf4a67f-f9d7-4856-b9ed-a20e3051c72d"],
Cell[31801, 789, 763, 15, 35, "Text",ExpressionUUID->"59de4cde-ac7b-4e66-927b-3d52a9981ec9"],
Cell[32567, 806, 121, 0, 35, "Item",ExpressionUUID->"a32ca18f-cfef-4b25-8c4a-e1660f6fae00"],
Cell[32691, 808, 140, 2, 35, "Item",ExpressionUUID->"6dd732f0-f9e6-4529-bb13-e2dda416d8ac"],
Cell[32834, 812, 113, 0, 35, "Item",ExpressionUUID->"0768a5be-34a8-4e63-b627-e4dbb8d1f2a2"],
Cell[CellGroupData[{
Cell[32972, 816, 165, 4, 79, "Subsubsection",ExpressionUUID->"3d1c6c1a-8501-486c-be3c-61b8ccc3ecbc"],
Cell[33140, 822, 444, 10, 35, "Text",ExpressionUUID->"35800cd7-c804-4c73-b9a0-5648b6097889"],
Cell[33587, 834, 470, 15, 40, "Input",ExpressionUUID->"97523254-5647-46e5-8d41-a3b968e9cd6a"],
Cell[34060, 851, 120, 1, 40, "Input",ExpressionUUID->"dec285a9-0794-4922-b9c4-dbb0d8f59554"],
Cell[34183, 854, 604, 19, 40, "Input",ExpressionUUID->"94ba9b9b-d176-41c9-b016-ab2eda3da4e3"],
Cell[34790, 875, 120, 1, 40, "Input",ExpressionUUID->"48626c89-8bfb-4a8e-bda5-e6c3a855a419"],
Cell[34913, 878, 128, 0, 35, "Text",ExpressionUUID->"fdd1bfb7-e338-4cab-942a-8bf5eee1c27e"],
Cell[35044, 880, 359, 11, 40, "Input",ExpressionUUID->"894214d9-0c01-4300-aa15-61f656fdddaf"],
Cell[35406, 893, 120, 1, 40, "Input",ExpressionUUID->"8c8ffcf2-8681-46d7-b8f6-46e3b39028ff"],
Cell[35529, 896, 86, 0, 138, "EndOfSlide",ExpressionUUID->"00fcc9d8-2f68-4521-abb4-7b3ab46ecd4a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35676, 903, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9fdc0110-45b9-4fa4-83f0-32bb9576b9c0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[35823, 909, 138, 3, 139, "Section",ExpressionUUID->"5a72fa5b-0580-4e17-8fe9-49279b64b97b",
 CellTags->"SpecialDataStructures"],
Cell[CellGroupData[{
Cell[35986, 916, 82, 0, 91, "Subsection",ExpressionUUID->"a6f38ae6-2e1e-4df5-9904-df5d3fab6278"],
Cell[36071, 918, 147, 2, 35, "Text",ExpressionUUID->"3cf1a994-cf2b-42f4-86b7-c5815f6af236"],
Cell[CellGroupData[{
Cell[36243, 924, 93, 0, 79, "Subsubsection",ExpressionUUID->"61e62f26-4422-4e4d-ad64-0c2c72bcef43"],
Cell[36339, 926, 385, 5, 58, "Text",ExpressionUUID->"5d5cbb5a-fd3b-472f-ba6b-62f18acbb4a3"],
Cell[36727, 933, 268, 7, 60, "Input",ExpressionUUID->"e807dbf7-8e2d-4364-a084-3e180798628e"],
Cell[36998, 942, 107, 0, 35, "Text",ExpressionUUID->"ae579458-8334-4bcc-9a38-bc181091ed3a"],
Cell[37108, 944, 154, 3, 40, "Input",ExpressionUUID->"5733b099-6022-49d9-81b7-577f92c76521"],
Cell[37265, 949, 271, 4, 35, "Text",ExpressionUUID->"0736d7f5-8a82-43d5-b6c0-d8e4ed520ea3"],
Cell[37539, 955, 365, 9, 60, "Input",ExpressionUUID->"2246acb8-fa57-45bd-96fc-63ec8b304964"],
Cell[37907, 966, 177, 3, 35, "Text",ExpressionUUID->"c1dba4e9-c699-4dfd-9375-ec81fa1631fc"],
Cell[38087, 971, 155, 3, 40, "Input",ExpressionUUID->"87f46741-1b62-4bab-8c9f-573b33ac4908"],
Cell[38245, 976, 122, 0, 35, "Text",ExpressionUUID->"e7b31302-3efa-41ec-96bd-e7ed4b90dece"],
Cell[38370, 978, 149, 2, 40, "Input",ExpressionUUID->"6f0c0b89-9966-4df0-ac1d-ddbba1ad1481"],
Cell[38522, 982, 150, 2, 40, "Input",ExpressionUUID->"be71ee28-84e8-46d9-ab2b-c5d05ee94963"],
Cell[38675, 986, 177, 3, 35, "Text",ExpressionUUID->"97b4901f-79d4-41ff-bf60-8c4dd96e8f82"],
Cell[38855, 991, 222, 5, 40, "Input",ExpressionUUID->"61d8a328-6c8b-4891-b3fe-c6474989ce83"],
Cell[39080, 998, 136, 2, 40, "Input",ExpressionUUID->"b5f02bc3-1d7a-4d93-bb67-6d32c9133fec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39253, 1005, 91, 0, 79, "Subsubsection",ExpressionUUID->"b01cd058-3015-4213-9de8-c4a1b5334389"],
Cell[39347, 1007, 491, 9, 35, "Text",ExpressionUUID->"3e0f886e-07c7-48fe-8fa4-defcb3bdc3e1"],
Cell[39841, 1018, 175, 3, 35, "Text",ExpressionUUID->"071496de-23fb-4aa1-ab6d-b32b59f88f67"],
Cell[40019, 1023, 270, 7, 40, "Input",ExpressionUUID->"47d4ea59-acad-4bed-b738-9dec6dfcee99"],
Cell[40292, 1032, 142, 2, 40, "Input",ExpressionUUID->"d67c1e94-2efd-4067-b9c1-5b11d5c3c079"],
Cell[40437, 1036, 185, 3, 35, "Text",ExpressionUUID->"ac3507c3-0b74-46ba-8aab-4e3b842ed2f5"],
Cell[40625, 1041, 178, 4, 40, "Input",ExpressionUUID->"ca7d1daa-73ab-4ee1-bce6-772fa24d014d"],
Cell[40806, 1047, 295, 8, 79, "Input",ExpressionUUID->"642c3bef-4b97-49f0-bfca-0fbc1de12f13"],
Cell[41104, 1057, 107, 0, 35, "Text",ExpressionUUID->"003d40cd-b4b0-4712-ac47-8a5dc96830d1"],
Cell[41214, 1059, 366, 10, 40, "Input",ExpressionUUID->"59bec1e0-5492-4e33-96f4-14fde15738b3"],
Cell[41583, 1071, 144, 2, 40, "Input",ExpressionUUID->"e98ed7e0-141c-469e-9934-a15c6c6e075b"],
Cell[41730, 1075, 178, 3, 35, "Text",ExpressionUUID->"af44f519-d369-4562-bb6b-a12ee70a0264"],
Cell[41911, 1080, 86, 0, 138, "EndOfSlide",ExpressionUUID->"32b6077f-c256-47e1-b0b7-7c8767e95841"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42070, 1088, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1bcf60a2-ceec-47ca-ae2d-5bc3c4895e35",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[42217, 1094, 90, 0, 91, "Subsection",ExpressionUUID->"34ddd732-aa16-415c-8a33-5782833ea2cb"],
Cell[42310, 1096, 558, 12, 35, "Text",ExpressionUUID->"36471316-1765-4969-9ee5-6f9983f29577"],
Cell[42871, 1110, 380, 7, 35, "Item",ExpressionUUID->"a7af1988-5868-4370-a2d5-fe16b2118484"],
Cell[43254, 1119, 170, 3, 35, "Item",ExpressionUUID->"9f36fa6c-195e-4e2c-ac39-f0a9e8589b6f"],
Cell[43427, 1124, 415, 11, 35, "Text",ExpressionUUID->"d81b962f-84c0-4cc2-b31f-3c6d9597dd44"],
Cell[43845, 1137, 112, 1, 40, "Input",ExpressionUUID->"191f8271-9ab3-4ff8-82ed-4b79eb618025"],
Cell[CellGroupData[{
Cell[43982, 1142, 154, 4, 79, "Subsubsection",ExpressionUUID->"b0f16a3a-76ff-4aa6-9170-59f870e831a6"],
Cell[44139, 1148, 162, 3, 35, "Text",ExpressionUUID->"6032ec01-4bd9-4b7d-b9f9-739e92c5a99d"],
Cell[44304, 1153, 182, 3, 40, "Input",ExpressionUUID->"3501f478-b5ef-494e-ace0-8405a1a8f48f"],
Cell[44489, 1158, 518, 10, 35, "Text",ExpressionUUID->"dd4ab649-c6e3-4a10-be15-e5b170b71c30"],
Cell[CellGroupData[{
Cell[45032, 1172, 5674, 128, 568, "Input",ExpressionUUID->"cc6e4b15-859b-45ae-8d0b-e6cd6129ff4a"],
Cell[50709, 1302, 3365, 77, 393, "Output",ExpressionUUID->"05a02171-5927-4c40-a1d5-ee9f105d1e0e"]
}, {2}]],
Cell[54086, 1382, 361, 8, 35, "Text",ExpressionUUID->"a140c63a-427e-4853-92e2-a6aaf6278c71"],
Cell[54450, 1392, 163, 3, 40, "Input",ExpressionUUID->"6a2f102a-fd00-487c-b976-8dd1af112950"],
Cell[54616, 1397, 163, 3, 40, "Input",ExpressionUUID->"e9d2a56b-836e-4794-899d-59843c66fc09"],
Cell[54782, 1402, 372, 8, 35, "Text",ExpressionUUID->"ae45f4e7-53e0-4167-84ce-6b70536624bb"],
Cell[55157, 1412, 139, 2, 40, "Input",ExpressionUUID->"cf74db5b-259e-4075-a786-bfbe4dff6c31"],
Cell[55299, 1416, 139, 2, 40, "Input",ExpressionUUID->"b88f9817-e381-4e40-8e3f-d445d5ca8828"],
Cell[55441, 1420, 157, 2, 35, "Text",ExpressionUUID->"1ea8eb5a-e704-4602-ba74-5036a6dc8a3a"],
Cell[55601, 1424, 734, 22, 98, "Input",ExpressionUUID->"dfebabe2-dd60-46e0-ac86-c718f85f1c3c"],
Cell[56338, 1448, 666, 17, 117, "Input",ExpressionUUID->"a2c5e4f6-92c0-48dc-81a2-140de64a1476"],
Cell[57007, 1467, 802, 20, 117, "Input",ExpressionUUID->"0dc97d08-c822-4c27-8b93-66c833432bb0"],
Cell[57812, 1489, 86, 0, 138, "EndOfSlide",ExpressionUUID->"bfa7ec53-c6b6-40ae-9aff-9042c925320e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57959, 1496, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"33a2f77f-9b8e-4d77-b714-8e671bb81104",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[58106, 1502, 95, 0, 91, "Subsection",ExpressionUUID->"d2844010-4e7d-493b-b06f-e4597b1b7f1b"],
Cell[58204, 1504, 320, 5, 35, "Text",ExpressionUUID->"69d67a4c-7457-4bc8-beac-8ede9bd2651c"],
Cell[CellGroupData[{
Cell[58549, 1513, 163, 4, 79, "Subsubsection",ExpressionUUID->"0c538eaf-8892-4bd1-8f32-6d4ac20a127e"],
Cell[58715, 1519, 249, 5, 35, "Text",ExpressionUUID->"8fb7ac9b-1604-4cee-9f26-0e2ee9d2730c"],
Cell[58967, 1526, 811, 22, 136, "Input",ExpressionUUID->"fdb7d960-5697-4cd4-b07c-4690ac00b09f"],
Cell[59781, 1550, 388, 8, 35, "Text",ExpressionUUID->"edb66e13-25e2-4e59-af0c-86a9d0e90cdb"],
Cell[60172, 1560, 933, 26, 60, "Input",ExpressionUUID->"d1bd17c9-ba51-4a30-af28-18bf87cd26a8"],
Cell[61108, 1588, 228, 5, 40, "Input",ExpressionUUID->"d247ee3f-ccfe-4d5d-affb-01697b9734c9"],
Cell[61339, 1595, 192, 4, 40, "Input",ExpressionUUID->"3dbf6a44-a56a-4b73-bea6-066460ece430"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61568, 1604, 160, 4, 79, "Subsubsection",ExpressionUUID->"68ad152a-3b77-4f00-a6dd-959addf58635"],
Cell[61731, 1610, 503, 11, 35, "Text",ExpressionUUID->"c69f78de-cab7-48ad-8998-cb61c1f700d8"],
Cell[62237, 1623, 965, 27, 60, "Input",ExpressionUUID->"e61f703f-ceb9-4c40-9f95-115b7aa8f838"],
Cell[63205, 1652, 225, 5, 40, "Input",ExpressionUUID->"760e2e0e-0a1b-4705-aa14-cbb1c64525f3"],
Cell[63433, 1659, 86, 0, 138, "EndOfSlide",ExpressionUUID->"ff04e7bd-d05d-46df-a21e-1a7e1dc4c921"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63580, 1666, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"84c05ece-78de-4236-a274-1310565f2f39",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[63727, 1672, 122, 2, 139, "Section",ExpressionUUID->"d80f9791-d265-4c4a-b7ae-5bfc48b68de3",
 CellTags->"Parallelization"],
Cell[63852, 1676, 249, 4, 35, "Text",ExpressionUUID->"f9aa23b6-9bd6-43e5-a8bc-8fe16f1575b4"],
Cell[CellGroupData[{
Cell[64126, 1684, 6558, 153, 694, "Input",ExpressionUUID->"d2a7a3f8-1493-4ce8-af1a-bcca2426b015"],
Cell[70687, 1839, 10659, 244, 421, "Output",ExpressionUUID->"8a4eb422-8533-4b4a-b396-2d66aaf06bbf"]
}, {2}]],
Cell[81358, 2086, 123, 0, 35, "Text",ExpressionUUID->"d68b4d12-467b-43f0-a8ae-6caebb348c7b"],
Cell[81484, 2088, 123, 2, 40, "Input",ExpressionUUID->"0f3c50b3-8c47-4880-a813-b6403f4d472f"],
Cell[81610, 2092, 96, 0, 35, "Text",ExpressionUUID->"57597c46-92b2-4da2-b3d4-2c41242baa15"],
Cell[81709, 2094, 142, 2, 35, "Item",ExpressionUUID->"f187eb19-defb-4e1c-bde0-d6fd5d7e6831"],
Cell[81854, 2098, 205, 3, 35, "Item",ExpressionUUID->"a0198d8e-454f-4543-b273-4f5ed80b1fd8"],
Cell[CellGroupData[{
Cell[82084, 2105, 161, 4, 79, "Subsubsection",ExpressionUUID->"5273145e-05df-4015-98e7-048ab5b8c92a"],
Cell[82248, 2111, 326, 7, 35, "Text",ExpressionUUID->"5842632c-3341-46e3-8a41-c3d0792ef1df"],
Cell[82577, 2120, 350, 10, 40, "Input",ExpressionUUID->"4fed32b3-17e3-45c7-948f-25d7801410e4"],
Cell[82930, 2132, 453, 8, 35, "Text",ExpressionUUID->"e5568e64-6f58-4c91-9705-8096ed398a1e"],
Cell[CellGroupData[{
Cell[83408, 2144, 677, 14, 169, "Input",ExpressionUUID->"46d5ee98-87b0-4b38-b9e3-5746e108a55b"],
Cell[84088, 2160, 2145, 59, 433, "Output",ExpressionUUID->"825c1c2d-8cfc-4880-a230-dc49238c4e78"]
}, {2}]],
Cell[86245, 2222, 116, 1, 40, "Input",ExpressionUUID->"547ef710-9680-4f76-80b0-9858324d2a0e"],
Cell[86364, 2225, 372, 10, 40, "Input",ExpressionUUID->"e21447b9-0899-4cff-865a-4e9f6fba2cb1"],
Cell[86739, 2237, 380, 10, 40, "Input",ExpressionUUID->"f1825c96-ef52-47cb-aeed-646d2f1b639c"],
Cell[87122, 2249, 154, 2, 35, "Text",ExpressionUUID->"efb6d3a9-ad48-44cd-a567-1e701d5ccfaa"],
Cell[87279, 2253, 527, 14, 40, "Input",ExpressionUUID->"c6d92df4-78b5-4266-9c5d-848a8b9d7956"],
Cell[87809, 2269, 535, 14, 40, "Input",ExpressionUUID->"5d65c4d0-3832-42a7-8035-882de8a06f03"],
Cell[88347, 2285, 115, 1, 40, "Input",ExpressionUUID->"6156daea-47ce-4615-b45c-8133c9bf981a"],
Cell[88465, 2288, 86, 0, 138, "EndOfSlide",ExpressionUUID->"5487cf1c-2245-4b9b-88bb-8d509d3ffda7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88612, 2295, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"22780e35-74a5-40e0-80d4-d47ba2c390e9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[88759, 2301, 123, 2, 139, "Section",ExpressionUUID->"662751af-dde1-48d2-8e68-2ae21350ad20",
 CellTags->"CodeCompilation"],
Cell[CellGroupData[{
Cell[88907, 2307, 92, 0, 91, "Subsection",ExpressionUUID->"b418fe88-96ef-415c-a95a-82ffa0c1ccd4"],
Cell[89002, 2309, 309, 5, 35, "Text",ExpressionUUID->"e26ba0c4-ae01-4466-9613-75de4705d782"],
Cell[89314, 2316, 233, 3, 35, "Text",ExpressionUUID->"ae0c577e-d8a5-4587-b4b9-5220ffbe5321"],
Cell[CellGroupData[{
Cell[89572, 2323, 159, 4, 79, "Subsubsection",ExpressionUUID->"7cf4cb2a-447e-4edd-8a28-dbafac32bcbc"],
Cell[89734, 2329, 183, 3, 35, "Text",ExpressionUUID->"cc53a9f3-e5dd-4e0f-8698-14591414298f"],
Cell[89920, 2334, 340, 9, 40, "Input",ExpressionUUID->"7ebe4d43-841f-4ad1-aa1a-a13913f444b5"],
Cell[90263, 2345, 208, 4, 40, "Input",ExpressionUUID->"7bf6a620-07f4-4d16-87f5-8f9e267e44da",
 CellID->797256668],
Cell[90474, 2351, 106, 0, 35, "Text",ExpressionUUID->"fadaf586-5843-43bb-8449-dab2257f5d17"],
Cell[90583, 2353, 223, 6, 40, "Input",ExpressionUUID->"170a90d5-5364-4592-b35f-e03394695e13"],
Cell[90809, 2361, 691, 17, 35, "Text",ExpressionUUID->"abb2c960-ef4e-4d1b-a0d2-ea8584f541cf"],
Cell[91503, 2380, 596, 14, 79, "Input",ExpressionUUID->"cacdc29d-38a7-481b-8f9b-d3c6a4e14f50",
 CellID->1785607515],
Cell[92102, 2396, 225, 5, 40, "Input",ExpressionUUID->"1122c629-303f-4c7c-8ec3-73fc9990e5ae",
 CellID->1995742502],
Cell[92330, 2403, 362, 8, 35, "Text",ExpressionUUID->"a8ea03b8-99c1-4059-a609-b44cb302a972"],
Cell[92695, 2413, 690, 17, 98, "Input",ExpressionUUID->"e01dc04e-1132-4df8-8e04-0e2337699df0"],
Cell[93388, 2432, 807, 18, 117, "Input",ExpressionUUID->"941d90cd-6281-4bea-880c-545e4208d20d"],
Cell[94198, 2452, 86, 0, 138, "EndOfSlide",ExpressionUUID->"5d1736b4-5cba-441e-805b-f4fa29d67e09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94357, 2460, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"61a00348-ce16-4c22-b211-608ffcc1320a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[94504, 2466, 94, 0, 91, "Subsection",ExpressionUUID->"58c417ec-4c5d-4e08-8db7-7fe2bc30f1be"],
Cell[94601, 2468, 125, 0, 35, "Text",ExpressionUUID->"f6c1f45e-1794-464f-aefe-91d85f957c6d"],
Cell[CellGroupData[{
Cell[94751, 2472, 6511, 159, 736, "Input",ExpressionUUID->"67fc204a-b8ae-47ef-89f0-de69546ad37d"],
Cell[101265, 2633, 2887, 68, 693, "Output",ExpressionUUID->"b1874a66-ac7c-41c4-9a81-32e4a96ad68e"]
}, {2}]],
Cell[CellGroupData[{
Cell[104186, 2706, 170, 4, 79, "Subsubsection",ExpressionUUID->"f3f2805e-68df-402e-b4ee-9b217d0153f0"],
Cell[104359, 2712, 386, 7, 35, "Text",ExpressionUUID->"0ac3f9bd-5bd2-4986-9576-57c2d7997291"],
Cell[104748, 2721, 1066, 31, 155, "Input",ExpressionUUID->"9288fc8a-3d16-4662-a798-adf5a6916a43"],
Cell[105817, 2754, 274, 8, 40, "Input",ExpressionUUID->"95e2bcee-b0d4-461e-afbd-ee7fd2bd6e84"],
Cell[106094, 2764, 287, 8, 40, "Input",ExpressionUUID->"35ef9e2a-ff0d-431d-97c3-70898855b3e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106418, 2777, 161, 4, 79, "Subsubsection",ExpressionUUID->"a7ba1951-3015-4702-b751-db5734ca8655"],
Cell[106582, 2783, 118, 0, 35, "Text",ExpressionUUID->"be443e24-756e-454c-9b28-61b596050d89"],
Cell[106703, 2785, 1340, 33, 212, "Input",ExpressionUUID->"f6cded21-b410-4652-92b2-5f85a2eec58b"],
Cell[108046, 2820, 167, 3, 40, "Input",ExpressionUUID->"110c4e39-642e-4cbe-a3fe-d68e5d45a486"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108250, 2828, 166, 4, 79, "Subsubsection",ExpressionUUID->"91c1ba12-a262-4a6d-bf78-53e4fec978d0"],
Cell[108419, 2834, 156, 2, 35, "Text",ExpressionUUID->"26545377-eb0d-43b9-afc2-0fb01fbf9bb9"],
Cell[108578, 2838, 872, 20, 212, "Input",ExpressionUUID->"bfb319ce-eed9-425e-9f1e-7af087c370e9"],
Cell[109453, 2860, 492, 12, 79, "Input",ExpressionUUID->"02c84145-3bde-4718-8efa-0b3d42e03b7e"],
Cell[109948, 2874, 86, 0, 138, "EndOfSlide",ExpressionUUID->"5681863a-21b0-431b-926b-345fd2b451c3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110095, 2881, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"867f84c0-2df5-44cb-bb67-9ee71fad894e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[110242, 2887, 138, 3, 139, "Section",ExpressionUUID->"9762e5b6-a53d-4b21-8119-eb206099e6ae",
 CellTags->"CachingAndMemoization"],
Cell[110383, 2892, 247, 4, 35, "Text",ExpressionUUID->"6af0494a-d04f-4c36-8636-56a72aab8668"],
Cell[110633, 2898, 231, 6, 40, "Input",ExpressionUUID->"4f2d02e8-449c-4557-ac89-827d0f6340eb",
 Evaluatable->False],
Cell[110867, 2906, 367, 8, 35, "Text",ExpressionUUID->"aa2da585-36ee-4aac-90fc-5c91031c9963"],
Cell[111237, 2916, 573, 18, 98, "Input",ExpressionUUID->"8ebcda14-7906-4c21-be1e-38d0b42ba493"],
Cell[111813, 2936, 155, 3, 40, "Input",ExpressionUUID->"236891d7-a345-4007-9377-8b24dd1ce0f6"],
Cell[111971, 2941, 128, 0, 35, "Text",ExpressionUUID->"e473ae3c-8985-4fd8-b172-be1f21356f6d"],
Cell[112102, 2943, 641, 20, 98, "Input",ExpressionUUID->"b2f70955-1b23-4df0-bc52-77a3f15756d6"],
Cell[112746, 2965, 170, 3, 40, "Input",ExpressionUUID->"77bc015b-7f82-49f4-8d2c-f9866ce1585f"],
Cell[112919, 2970, 143, 2, 35, "Text",ExpressionUUID->"fe54cbd3-e4c3-47fa-97b0-47c3271d3d2c"],
Cell[113065, 2974, 121, 1, 40, "Input",ExpressionUUID->"688a7dda-95c8-4bc2-a44d-c2d89a257c2e"],
Cell[113189, 2977, 376, 9, 35, "Text",ExpressionUUID->"f5b6b499-2b32-485f-bdc9-03c77355bbb5"],
Cell[113568, 2988, 695, 22, 98, "Input",ExpressionUUID->"532977ca-2ff6-47ab-944c-78111033d14a"],
Cell[114266, 3012, 170, 3, 40, "Input",ExpressionUUID->"4db59449-9ce9-438f-9390-85632b5e8f5f"],
Cell[114439, 3017, 126, 0, 35, "Text",ExpressionUUID->"99b572c0-6f8a-474e-b1a4-a473e014e78d"],
Cell[114568, 3019, 176, 3, 40, "Input",ExpressionUUID->"9f6d86e6-a7cd-4e7f-83a8-0d7c85daed4a"],
Cell[114747, 3024, 344, 8, 35, "Text",ExpressionUUID->"7b83bcaf-0f90-42cd-9a0c-7324b9a4daf7"],
Cell[115094, 3034, 187, 3, 40, "Input",ExpressionUUID->"fa86c6d4-41a6-4562-8916-4bcbf2adff46"],
Cell[115284, 3039, 296, 6, 35, "Text",ExpressionUUID->"e5b5f038-f153-4c98-9d85-b84cb2e1ca24"],
Cell[115583, 3047, 1815, 47, 364, "Input",ExpressionUUID->"79ddd8f3-c5b8-42d8-a567-ecd17f6183aa"],
Cell[117401, 3096, 170, 3, 40, "Input",ExpressionUUID->"686bb544-c2a3-4d3c-87f3-0764c61ba8da"],
Cell[117574, 3101, 143, 2, 40, "Input",ExpressionUUID->"87e289bb-ecb1-497e-8be9-8776bcae842e"],
Cell[117720, 3105, 86, 0, 138, "EndOfSlide",ExpressionUUID->"07e97145-cd37-4d7b-a942-8b3f1a48a615"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117855, 3111, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b05b724a-28c2-4701-b6bb-d11770733b15",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[118002, 3117, 121, 2, 139, "Section",ExpressionUUID->"4a3c771c-db88-4c4f-bd3c-a079cbe826a0",
 CellTags->"AdditionalTips"],
Cell[CellGroupData[{
Cell[118148, 3123, 98, 0, 79, "Subsubsection",ExpressionUUID->"34d9960e-a93b-466a-9e41-03fd03534fae"],
Cell[118249, 3125, 155, 2, 35, "Text",ExpressionUUID->"6c7dab15-a297-47ec-8f61-a87164259f1b"],
Cell[118407, 3129, 450, 14, 79, "Input",ExpressionUUID->"5d781740-18b2-49ca-b62f-181c9bcb68f1"],
Cell[118860, 3145, 212, 6, 40, "Input",ExpressionUUID->"1e969e8b-0b7e-41bb-937f-ac09d0f25258"],
Cell[119075, 3153, 277, 9, 40, "Input",ExpressionUUID->"9f2e4ee3-6c40-4cee-ae31-f412206b4bd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119389, 3167, 109, 0, 79, "Subsubsection",ExpressionUUID->"20e17cb0-01a0-43c4-937e-bbe35bacf9aa"],
Cell[119501, 3169, 407, 9, 35, "Text",ExpressionUUID->"23472abb-0a4c-4c1a-afe3-e786e2811b87"],
Cell[119911, 3180, 797, 24, 117, "Input",ExpressionUUID->"88589ba1-9c95-4020-b9c7-0f8e71112bfa"],
Cell[120711, 3206, 179, 3, 35, "Text",ExpressionUUID->"b3527cf0-f4d2-423d-a1bb-01ba9d2c567a"],
Cell[120893, 3211, 2224, 53, 402, "Input",ExpressionUUID->"3814ab28-9314-4e18-8f63-f382e6b30a78"],
Cell[123120, 3266, 183, 5, 40, "Input",ExpressionUUID->"cd946707-331a-4c0e-9523-cce5160cc7e8"],
Cell[123306, 3273, 392, 8, 35, "Text",ExpressionUUID->"4583b368-e655-46d1-9520-48468fc1fc58"],
Cell[123701, 3283, 176, 5, 40, "Input",ExpressionUUID->"cc4cf487-073b-41d7-b046-c69ffc0b6e44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123914, 3293, 96, 0, 79, "Subsubsection",ExpressionUUID->"4909cd9e-dd25-4c86-b82f-d6b1838eb07e"],
Cell[124013, 3295, 981, 26, 35, "Text",ExpressionUUID->"a98f6496-281d-485f-ae6d-52883d2a1b42"],
Cell[124997, 3323, 660, 15, 174, "Input",ExpressionUUID->"13fe13a7-b419-4a61-98cd-8a769c883f1f"],
Cell[125660, 3340, 681, 16, 174, "Input",ExpressionUUID->"e9246969-c299-427d-ab7b-4cffc64d8950"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126378, 3361, 129, 2, 79, "Subsubsection",ExpressionUUID->"53b8b2f0-23fe-43ac-9f34-86a71a83673a"],
Cell[126510, 3365, 737, 20, 35, "Text",ExpressionUUID->"1614e0c5-91c1-4feb-a055-f3b77d95664c"],
Cell[127250, 3387, 420, 12, 40, "Input",ExpressionUUID->"30ae4c1b-3f2e-43c6-a460-7c60ea002edb"],
Cell[127673, 3401, 766, 23, 60, "Input",ExpressionUUID->"5fa5d694-62ff-44d1-bf5f-07ff7efe3df5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128500, 3431, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"59241062-74bf-4c9e-b997-f78fba1ad180",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[128647, 3437, 103, 1, 139, "Section",ExpressionUUID->"1dec6db0-67a0-41aa-ae6f-aabc78dc3f4e",
 CellTags->"Summary"],
Cell[128753, 3440, 131, 0, 35, "Item",ExpressionUUID->"00bf000d-01ae-4a60-bdc5-64e1acb0a580"],
Cell[128887, 3442, 172, 3, 35, "Item",ExpressionUUID->"e7db4bd6-e711-41c9-ba35-a6a4199bd0d9"],
Cell[129062, 3447, 99, 0, 35, "Item",ExpressionUUID->"088aec40-6c02-42a7-b17d-60439488d471"],
Cell[129164, 3449, 83, 0, 35, "Item",ExpressionUUID->"fcc9d98b-8dde-48e1-a89a-6d6b641cac42"],
Cell[129250, 3451, 84, 0, 35, "Item",ExpressionUUID->"1bda6a51-8101-421a-814c-bd0fdd3d1835"],
Cell[129337, 3453, 113, 0, 35, "Item",ExpressionUUID->"ed79e0b7-a0e4-434d-8a8b-ea83bac89d7b"],
Cell[129453, 3455, 86, 0, 138, "EndOfSlide",ExpressionUUID->"ff346465-4f93-4e22-b2aa-9b84fba91c45"]
}, Open  ]]
}, Open  ]]
}
]
*)

